version: "3.9"
services:
  backend:
    container_name: backend_scooter
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    restart: always
    depends_on:
      - postgres
      - broker
    env_file:
      - .env
    networks:
      - scooter_bridge
  postgres:
    container_name: database
    image: postgres:13.3
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "5432:5432"
    restart: always
    networks:
      - scooter_bridge

  redis:
    container_name: redis_db
    image: redis:7.4.1-alpine3.20
    ports:
      - "6379:6379"
    restart: always
    depends_on:
      - backend
    networks:
      - scooter_bridge

  broker:
    container_name: broker_rabbit
    image: rabbitmq:3.13.7-management-alpine
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBIT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBIT_PASSWORD}
    ports:
      - "5672:5672"
    networks:
      - scooter_bridge
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 5

  backend_brock:
    container_name: scooter_brocker
    build:
      context: .
      dockerfile: Dockerfile.broker
    restart: always
    depends_on:
      broker:
        condition: service_healthy
    ports:
      - "5680:5680"
    networks:
      - scooter_bridge


networks:
  scooter_bridge:
    driver: bridge