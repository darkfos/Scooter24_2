INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - создание токена
INFO:src.database.repository.user_repository:UserRepository Поиск пользователя по почте=darkfos82@gmail.com
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "User".email_user, "User".password_user, "User".secret_update_key, "User".name_user, "User".surname_user, "User".main_name_user, "User".date_registration, "User".date_update, "User".name_user_address, "User".surname_user_address, "User".name_company_address, "User".country_address, "User".address_street, "User".address_rl_et_home, "User".address_locality, "User".address_area, "User".address_index, "User".address_phone_number, "User".id 
FROM "User" 
WHERE "User".email_user = $1::VARCHAR
INFO:sqlalchemy.engine.Engine:[generated in 0.00026s] ('darkfos82@gmail.com',)
INFO:src.database.repository.admin_repository:AdminRepository Запрос на получение данных по почте и паролю email=darkfos82@gmail.com; password=chaiki45
INFO:sqlalchemy.engine.Engine:SELECT "Admin".email_admin, "Admin".password_user, "Admin".date_create, "Admin".date_update, "Admin".id 
FROM "Admin" 
WHERE "Admin".email_admin = $1::VARCHAR
INFO:sqlalchemy.engine.Engine:[generated in 0.00027s] ('darkfos82@gmail.com',)
ERROR:src.database.repository.admin_repository:AdminRepository не удалось получить данные администратора по почте и паролю email=darkfos82@gmail.com; password=chaiki45
INFO:src.api.authentication.hash_service.hashing:Верификация пользователя
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:src.api.core.user_catalog.service.user_service:Получение полной информации о пользователе
INFO:src.database.repository.user_repository:UserRepository Поиск пользователя и получение полной информации о пользователе id_user=1
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "User".email_user, "User".password_user, "User".secret_update_key, "User".name_user, "User".surname_user, "User".main_name_user, "User".date_registration, "User".date_update, "User".name_user_address, "User".surname_user_address, "User".name_company_address, "User".country_address, "User".address_street, "User".address_rl_et_home, "User".address_locality, "User".address_area, "User".address_index, "User".address_phone_number, "User".id, "Favourite_1".id_user, "Favourite_1".id_product, "Favourite_1".id AS id_1, "Order_1".date_buy, "Order_1".id_user AS id_user_1, "Order_1".id_product AS id_product_1, "Order_1".id AS id_2, "Historybuy_1".id_user AS id_user_2, "Historybuy_1".id_product AS id_product_2, "Historybuy_1".id AS id_3, "Review_1".text_review, "Review_1".estimation_review, "Review_1".id_user AS id_user_3, "Review_1".id_product AS id_product_3, "Review_1".id AS id_4 
FROM "User" LEFT OUTER JOIN "Favourite" AS "Favourite_1" ON "User".id = "Favourite_1".id_user LEFT OUTER JOIN "Order" AS "Order_1" ON "User".id = "Order_1".id_user LEFT OUTER JOIN "Historybuy" AS "Historybuy_1" ON "User".id = "Historybuy_1".id_user LEFT OUTER JOIN "Review" AS "Review_1" ON "User".id = "Review_1".id_user 
WHERE "User".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00048s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Redis данные были сохранены в хранилище
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:src.api.core.user_catalog.service.user_service:UserService Получение информации о пользователе и его избранных товарах
INFO:src.database.repository.user_repository:UserRepository Получение информации о пользователе и о всех его товарах в списке избранное id_user=1
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "User".email_user, "User".password_user, "User".secret_update_key, "User".name_user, "User".surname_user, "User".main_name_user, "User".date_registration, "User".date_update, "User".name_user_address, "User".surname_user_address, "User".name_company_address, "User".country_address, "User".address_street, "User".address_rl_et_home, "User".address_locality, "User".address_area, "User".address_index, "User".address_phone_number, "User".id, "Favourite_1".id_user, "Favourite_1".id_product, "Favourite_1".id AS id_1 
FROM "User" LEFT OUTER JOIN "Favourite" AS "Favourite_1" ON "User".id = "Favourite_1".id_user 
WHERE "User".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00024s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Redis данные были сохранены в хранилище
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - проверка прав пользователя (на администратора), email=darkfos@gmail.com
INFO:src.api.authentication.hash_service.hashing:Хеширование пароля
INFO:src.database.repository.admin_repository:AdminRepository Запрос на получение данных по почте и паролю email=darkfos@gmail.com; password=$2b$12$Qg9wd3exgndHXMwGSSgLzOHOCj1.23q198AeznBq5g/JuI0aFGk0.
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Admin".email_admin, "Admin".password_user, "Admin".date_create, "Admin".date_update, "Admin".id 
FROM "Admin" 
WHERE "Admin".email_admin = $1::VARCHAR
INFO:sqlalchemy.engine.Engine:[generated in 0.00038s] ('darkfos@gmail.com',)
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Admin".id) AS count_1 
FROM "Admin"
INFO:sqlalchemy.engine.Engine:[generated in 0.00025s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Admin".email_admin, "Admin".password_user, "Admin".date_create, "Admin".date_update, "Admin".id 
FROM "Admin" ORDER BY "Admin".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00023s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Admin".email_admin, "Admin".password_user, "Admin".date_create, "Admin".date_update, "Admin".id 
FROM "Admin" 
WHERE "Admin".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00036s] (6,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("User".id) AS count_1 
FROM "User"
INFO:sqlalchemy.engine.Engine:[generated in 0.00014s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "User".email_user, "User".password_user, "User".secret_update_key, "User".name_user, "User".surname_user, "User".main_name_user, "User".date_registration, "User".date_update, "User".name_user_address, "User".surname_user_address, "User".name_company_address, "User".country_address, "User".address_street, "User".address_rl_et_home, "User".address_locality, "User".address_area, "User".address_index, "User".address_phone_number, "User".id 
FROM "User" ORDER BY "User".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00056s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "User".email_user, "User".password_user, "User".secret_update_key, "User".name_user, "User".surname_user, "User".main_name_user, "User".date_registration, "User".date_update, "User".name_user_address, "User".surname_user_address, "User".name_company_address, "User".country_address, "User".address_street, "User".address_rl_et_home, "User".address_locality, "User".address_area, "User".address_index, "User".address_phone_number, "User".id 
FROM "User" 
WHERE "User".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00070s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_user AS "Favourite_id_user", "Favourite".id_product AS "Favourite_id_product", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_user IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00046s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_user AS "Order_id_user", "Order".date_buy AS "Order_date_buy", "Order".id_product AS "Order_id_product", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_user IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00051s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Historybuy".id_user AS "Historybuy_id_user", "Historybuy".id_product AS "Historybuy_id_product", "Historybuy".id AS "Historybuy_id" 
FROM "Historybuy" 
WHERE "Historybuy".id_user IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00178s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_user AS "Review_id_user", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_product AS "Review_id_product", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_user IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00097s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Favourite".id) AS count_1 
FROM "Favourite"
INFO:sqlalchemy.engine.Engine:[generated in 0.00019s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_user, "Favourite".id_product, "Favourite".id 
FROM "Favourite" ORDER BY "Favourite".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00086s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Category".id) AS count_1 
FROM "Category"
INFO:sqlalchemy.engine.Engine:[generated in 0.00016s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".id 
FROM "Category" ORDER BY "Category".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00027s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Order".id) AS count_1 
FROM "Order"
INFO:sqlalchemy.engine.Engine:[generated in 0.00027s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Order".date_buy, "Order".id_user, "Order".id_product, "Order".id 
FROM "Order" ORDER BY "Order".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00038s] (10, 0)
INFO:sqlalchemy.engine.Engine:SELECT "Product".id AS "Product_id", "Product".title_product AS "Product_title_product", "Product".price_product AS "Product_price_product", "Product".quantity_product AS "Product_quantity_product", "Product".explanation_product AS "Product_explanation_product", "Product".article_product AS "Product_article_product", "Product".tags AS "Product_tags", "Product".other_data AS "Product_other_data", "Product".photo_product AS "Product_photo_product", "Product".date_create_product AS "Product_date_create_product", "Product".date_update_information AS "Product_date_update_information", "Product".product_discount AS "Product_product_discount" 
FROM "Product" 
WHERE "Product".id IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00352s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "User".id AS "User_id", "User".email_user AS "User_email_user", "User".password_user AS "User_password_user", "User".secret_update_key AS "User_secret_update_key", "User".name_user AS "User_name_user", "User".surname_user AS "User_surname_user", "User".main_name_user AS "User_main_name_user", "User".date_registration AS "User_date_registration", "User".date_update AS "User_date_update", "User".name_user_address AS "User_name_user_address", "User".surname_user_address AS "User_surname_user_address", "User".name_company_address AS "User_name_company_address", "User".country_address AS "User_country_address", "User".address_street AS "User_address_street", "User".address_rl_et_home AS "User_address_rl_et_home", "User".address_locality AS "User_address_locality", "User".address_area AS "User_address_area", "User".address_index AS "User_address_index", "User".address_phone_number AS "User_address_phone_number" 
FROM "User" 
WHERE "User".id IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00117s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Review".id) AS count_1 
FROM "Review"
INFO:sqlalchemy.engine.Engine:[generated in 0.00011s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Review".text_review, "Review".estimation_review, "Review".id_user, "Review".id_product, "Review".id 
FROM "Review" ORDER BY "Review".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00014s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Product".id) AS count_1 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[generated in 0.00016s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" ORDER BY "Product".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00024s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00037s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00053s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_product AS "Review_id_product", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00053s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_product AS "Order_id_product", "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00051s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_product AS "Favourite_id_product", "Favourite".id_user AS "Favourite_id_user", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00060s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 32.46s ago] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 32.45s ago] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_product AS "Review_id_product", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 32.45s ago] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_product AS "Order_id_product", "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 32.45s ago] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_product AS "Favourite_id_product", "Favourite".id_user AS "Favourite_id_user", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 32.44s ago] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 38.76s ago] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 38.76s ago] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_product AS "Review_id_product", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 38.76s ago] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_product AS "Order_id_product", "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 38.76s ago] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_product AS "Favourite_id_product", "Favourite".id_user AS "Favourite_id_user", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 38.76s ago] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 45.83s ago] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 45.83s ago] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_product AS "Review_id_product", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 45.83s ago] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_product AS "Order_id_product", "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 45.82s ago] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_product AS "Favourite_id_product", "Favourite".id_user AS "Favourite_id_user", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 45.82s ago] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
ERROR:asyncio:Fatal error on SSL protocol
protocol: <uvloop.loop.SSLProtocol object at 0x78f5c17f10c0>
transport: <TCPTransport closed=True reading=False 0x3e9acb0>
Traceback (most recent call last):
  File "uvloop/sslproto.pyx", line 669, in uvloop.loop.SSLProtocol._write_appdata
  File "uvloop/sslproto.pyx", line 699, in uvloop.loop.SSLProtocol._process_outgoing
  File "uvloop/handles/stream.pyx", line 674, in uvloop.loop.UVStream.write
  File "uvloop/handles/handle.pyx", line 159, in uvloop.loop.UVHandle._ensure_alive
RuntimeError: unable to perform operation on <TCPTransport closed=True reading=False 0x3e9acb0>; the handler is closed
ERROR:sqlalchemy.pool.impl.AsyncAdaptedQueuePool:The garbage collector is trying to clean up non-checked-in connection <AdaptedConnection <asyncpg.connection.Connection object at 0x78f5c14f17c0>>, which will be terminated.  Please ensure that SQLAlchemy pooled connections are returned to the pool explicitly, either by calling ``close()`` or by using appropriate context managers to manage their lifecycle.
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Review".id) AS count_1 
FROM "Review"
INFO:sqlalchemy.engine.Engine:[generated in 0.00022s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Review".text_review, "Review".estimation_review, "Review".id_user, "Review".id_product, "Review".id 
FROM "Review" ORDER BY "Review".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00026s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Typeworker".id) AS count_1 
FROM "Typeworker"
INFO:sqlalchemy.engine.Engine:[generated in 0.00014s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Typeworker".name_type, "Typeworker".id 
FROM "Typeworker" ORDER BY "Typeworker".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00023s] (10, 0)
INFO:sqlalchemy.engine.Engine:SELECT "Vacancies".id_type_worker AS "Vacancies_id_type_worker", "Vacancies".salary_employee AS "Vacancies_salary_employee", "Vacancies".description_vacancies AS "Vacancies_description_vacancies", "Vacancies".id AS "Vacancies_id" 
FROM "Vacancies" 
WHERE "Vacancies".id_type_worker IN ($1::INTEGER, $2::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00045s] (1, 2)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Typeworker".name_type, "Typeworker".id 
FROM "Typeworker"
INFO:sqlalchemy.engine.Engine:[generated in 0.00019s] ()
INFO:sqlalchemy.engine.Engine:SELECT "Vacancies".id_type_worker AS "Vacancies_id_type_worker", "Vacancies".salary_employee AS "Vacancies_salary_employee", "Vacancies".description_vacancies AS "Vacancies_description_vacancies", "Vacancies".id AS "Vacancies_id" 
FROM "Vacancies" 
WHERE "Vacancies".id_type_worker IN ($1::INTEGER, $2::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 2.781s ago] (1, 2)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Vacancies".salary_employee, "Vacancies".description_vacancies, "Vacancies".id_type_worker, "Vacancies".id 
FROM "Vacancies" 
WHERE CAST("Vacancies".id AS VARCHAR) ILIKE $1::VARCHAR OR CAST("Vacancies".description_vacancies AS VARCHAR) ILIKE $2::VARCHAR OR CAST("Vacancies".salary_employee AS VARCHAR) ILIKE $3::VARCHAR ORDER BY "Vacancies".id 
 LIMIT $4::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00027s] ('%1%', '%1%', '%1%', 10)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Vacancies".id) AS count_1 
FROM "Vacancies"
INFO:sqlalchemy.engine.Engine:[generated in 0.00009s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Vacancies".salary_employee, "Vacancies".description_vacancies, "Vacancies".id_type_worker, "Vacancies".id 
FROM "Vacancies" ORDER BY "Vacancies".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00014s] (10, 0)
INFO:sqlalchemy.engine.Engine:SELECT "Typeworker".id AS "Typeworker_id", "Typeworker".name_type AS "Typeworker_name_type" 
FROM "Typeworker" 
WHERE "Typeworker".id IN ($1::INTEGER, $2::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00023s] (1, 2)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Typeworker".id) AS count_1 
FROM "Typeworker"
INFO:sqlalchemy.engine.Engine:[cached since 45.26s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Typeworker".name_type, "Typeworker".id 
FROM "Typeworker" ORDER BY "Typeworker".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 45.26s ago] (10, 0)
INFO:sqlalchemy.engine.Engine:SELECT "Vacancies".id_type_worker AS "Vacancies_id_type_worker", "Vacancies".salary_employee AS "Vacancies_salary_employee", "Vacancies".description_vacancies AS "Vacancies_description_vacancies", "Vacancies".id AS "Vacancies_id" 
FROM "Vacancies" 
WHERE "Vacancies".id_type_worker IN ($1::INTEGER, $2::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 45.26s ago] (1, 2)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Vacancies".salary_employee, "Vacancies".description_vacancies, "Vacancies".id_type_worker, "Vacancies".id 
FROM "Vacancies" 
WHERE CAST("Vacancies".id AS VARCHAR) ILIKE $1::VARCHAR OR CAST("Vacancies".description_vacancies AS VARCHAR) ILIKE $2::VARCHAR OR CAST("Vacancies".salary_employee AS VARCHAR) ILIKE $3::VARCHAR ORDER BY "Vacancies".id 
 LIMIT $4::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 24.41s ago] ('%1%', '%1%', '%1%', 10)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Vacancies".salary_employee, "Vacancies".description_vacancies, "Vacancies".id_type_worker, "Vacancies".id 
FROM "Vacancies" 
WHERE "Vacancies".id IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00023s] (1,)
INFO:sqlalchemy.engine.Engine:INSERT INTO "Typeworker" (name_type) VALUES ($1::VARCHAR) RETURNING "Typeworker".id
INFO:sqlalchemy.engine.Engine:[generated in 0.00021s] ('Грузчик',)
INFO:sqlalchemy.engine.Engine:UPDATE "Vacancies" SET id_type_worker=$1::INTEGER WHERE "Vacancies".id = $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00046s] (3, 1)
INFO:sqlalchemy.engine.Engine:COMMIT
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Typeworker".id) AS count_1 
FROM "Typeworker"
INFO:sqlalchemy.engine.Engine:[cached since 59.37s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Typeworker".name_type, "Typeworker".id 
FROM "Typeworker" ORDER BY "Typeworker".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 59.37s ago] (10, 0)
INFO:sqlalchemy.engine.Engine:SELECT "Vacancies".id_type_worker AS "Vacancies_id_type_worker", "Vacancies".salary_employee AS "Vacancies_salary_employee", "Vacancies".description_vacancies AS "Vacancies_description_vacancies", "Vacancies".id AS "Vacancies_id" 
FROM "Vacancies" 
WHERE "Vacancies".id_type_worker IN ($1::INTEGER, $2::INTEGER, $3::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 59.36s ago] (1, 2, 3)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Vacancies".id) AS count_1 
FROM "Vacancies"
INFO:sqlalchemy.engine.Engine:[cached since 29.18s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Vacancies".salary_employee, "Vacancies".description_vacancies, "Vacancies".id_type_worker, "Vacancies".id 
FROM "Vacancies" ORDER BY "Vacancies".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 29.18s ago] (10, 0)
INFO:sqlalchemy.engine.Engine:SELECT "Typeworker".id AS "Typeworker_id", "Typeworker".name_type AS "Typeworker_name_type" 
FROM "Typeworker" 
WHERE "Typeworker".id IN ($1::INTEGER, $2::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 29.18s ago] (1, 3)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Typeworker".id) AS count_1 
FROM "Typeworker"
INFO:sqlalchemy.engine.Engine:[cached since 67.87s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Typeworker".name_type, "Typeworker".id 
FROM "Typeworker" ORDER BY "Typeworker".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 67.87s ago] (10, 0)
INFO:sqlalchemy.engine.Engine:SELECT "Vacancies".id_type_worker AS "Vacancies_id_type_worker", "Vacancies".salary_employee AS "Vacancies_salary_employee", "Vacancies".description_vacancies AS "Vacancies_description_vacancies", "Vacancies".id AS "Vacancies_id" 
FROM "Vacancies" 
WHERE "Vacancies".id_type_worker IN ($1::INTEGER, $2::INTEGER, $3::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 67.86s ago] (1, 2, 3)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Typeworker".name_type, "Typeworker".id 
FROM "Typeworker" 
WHERE "Typeworker".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00013s] (3,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Typeworker".name_type, "Typeworker".id 
FROM "Typeworker" 
WHERE "Typeworker".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 0.002401s ago] (3,)
INFO:sqlalchemy.engine.Engine:SELECT "Vacancies".salary_employee AS "Vacancies_salary_employee", "Vacancies".description_vacancies AS "Vacancies_description_vacancies", "Vacancies".id_type_worker AS "Vacancies_id_type_worker", "Vacancies".id AS "Vacancies_id" 
FROM "Vacancies" 
WHERE $1::INTEGER = "Vacancies".id_type_worker
INFO:sqlalchemy.engine.Engine:[generated in 0.00020s] (3,)
INFO:sqlalchemy.engine.Engine:UPDATE "Vacancies" SET id_type_worker=$1::INTEGER WHERE "Vacancies".id = $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 13.35s ago] (None, 1)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Typeworker".name_type, "Typeworker".id 
FROM "Typeworker" 
WHERE "Typeworker".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 3.257s ago] (3,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Typeworker".name_type, "Typeworker".id 
FROM "Typeworker" 
WHERE "Typeworker".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 3.259s ago] (3,)
INFO:sqlalchemy.engine.Engine:SELECT "Vacancies".salary_employee AS "Vacancies_salary_employee", "Vacancies".description_vacancies AS "Vacancies_description_vacancies", "Vacancies".id_type_worker AS "Vacancies_id_type_worker", "Vacancies".id AS "Vacancies_id" 
FROM "Vacancies" 
WHERE $1::INTEGER = "Vacancies".id_type_worker
INFO:sqlalchemy.engine.Engine:[cached since 3.255s ago] (3,)
INFO:sqlalchemy.engine.Engine:UPDATE "Vacancies" SET id_type_worker=$1::INTEGER WHERE "Vacancies".id = $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 16.6s ago] (None, 1)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Typeworker".name_type, "Typeworker".id 
FROM "Typeworker" 
WHERE "Typeworker".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00023s] (3,)
INFO:sqlalchemy.engine.Engine:SELECT "Vacancies".id_type_worker AS "Vacancies_id_type_worker", "Vacancies".salary_employee AS "Vacancies_salary_employee", "Vacancies".description_vacancies AS "Vacancies_description_vacancies", "Vacancies".id AS "Vacancies_id" 
FROM "Vacancies" 
WHERE "Vacancies".id_type_worker IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 95.85s ago] (3,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Typeworker".name_type, "Typeworker".id 
FROM "Typeworker" 
WHERE "Typeworker".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 3.216s ago] (3,)
INFO:sqlalchemy.engine.Engine:SELECT "Vacancies".id_type_worker AS "Vacancies_id_type_worker", "Vacancies".salary_employee AS "Vacancies_salary_employee", "Vacancies".description_vacancies AS "Vacancies_description_vacancies", "Vacancies".id AS "Vacancies_id" 
FROM "Vacancies" 
WHERE "Vacancies".id_type_worker IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 99.07s ago] (3,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Typeworker".name_type, "Typeworker".id 
FROM "Typeworker" 
WHERE "Typeworker".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 3.219s ago] (3,)
INFO:sqlalchemy.engine.Engine:SELECT "Vacancies".id_type_worker AS "Vacancies_id_type_worker", "Vacancies".salary_employee AS "Vacancies_salary_employee", "Vacancies".description_vacancies AS "Vacancies_description_vacancies", "Vacancies".id AS "Vacancies_id" 
FROM "Vacancies" 
WHERE "Vacancies".id_type_worker IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 99.07s ago] (3,)
INFO:sqlalchemy.engine.Engine:UPDATE "Vacancies" SET id_type_worker=$1::INTEGER WHERE "Vacancies".id = $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 39.74s ago] (None, 1)
INFO:sqlalchemy.engine.Engine:ROLLBACK
ERROR:sqladmin.application:(sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.NotNullViolationError'>: null value in column "id_type_worker" of relation "Vacancies" violates not-null constraint
DETAIL:  Failing row contains (39000, Нужен короче крутой такой финансит..., null, 1).
[SQL: UPDATE "Vacancies" SET id_type_worker=$1::INTEGER WHERE "Vacancies".id = $2::INTEGER]
[parameters: (None, 1)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
Traceback (most recent call last):
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 538, in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/asyncpg/prepared_stmt.py", line 176, in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/asyncpg/prepared_stmt.py", line 241, in __bind_execute
    data, status, _ = await self.__do_execute(
                      ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/asyncpg/prepared_stmt.py", line 230, in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "asyncpg/protocol/protocol.pyx", line 207, in bind_execute
asyncpg.exceptions.NotNullViolationError: null value in column "id_type_worker" of relation "Vacancies" violates not-null constraint
DETAIL:  Failing row contains (39000, Нужен короче крутой такой финансит..., null, 1).

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/engine/base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/engine/default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 572, in execute
    self._adapt_connection.await_(
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 550, in _prepare_and_execute
    self._handle_exception(error)
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 501, in _handle_exception
    self._adapt_connection._handle_exception(error)
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 784, in _handle_exception
    raise translated_error from error
sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_dbapi.IntegrityError: <class 'asyncpg.exceptions.NotNullViolationError'>: null value in column "id_type_worker" of relation "Vacancies" violates not-null constraint
DETAIL:  Failing row contains (39000, Нужен короче крутой такой финансит..., null, 1).

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqladmin/application.py", line 590, in edit
    obj = await model_view.update_model(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqladmin/models.py", line 1006, in update_model
    return await Query(self).update(pk, data, request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqladmin/_queries.py", line 232, in update
    return await self._update_async(pk, data, request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqladmin/_queries.py", line 164, in _update_async
    await session.commit()
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py", line 1009, in commit
    await greenlet_spawn(self.sync_session.commit)
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 203, in greenlet_spawn
    result = context.switch(value)
             ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 2028, in commit
    trans.commit(_to_root=True)
  File "<string>", line 2, in commit
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/orm/state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1313, in commit
    self._prepare_impl()
  File "<string>", line 2, in _prepare_impl
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/orm/state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1288, in _prepare_impl
    self.session.flush()
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 4352, in flush
    self._flush(objects)
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 4487, in _flush
    with util.safe_reraise():
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 4448, in _flush
    flush_context.execute()
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/orm/unitofwork.py", line 466, in execute
    rec.execute(self)
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/orm/unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/orm/persistence.py", line 85, in save_obj
    _emit_update_statements(
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/orm/persistence.py", line 912, in _emit_update_statements
    c = connection.execute(
        ^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/engine/base.py", line 1418, in execute
    return meth(
           ^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/sql/elements.py", line 515, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/engine/base.py", line 1640, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/engine/base.py", line 1846, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/engine/base.py", line 1986, in _exec_single_context
    self._handle_dbapi_exception(
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/engine/base.py", line 2355, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/engine/base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/engine/default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 572, in execute
    self._adapt_connection.await_(
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 550, in _prepare_and_execute
    self._handle_exception(error)
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 501, in _handle_exception
    self._adapt_connection._handle_exception(error)
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 784, in _handle_exception
    raise translated_error from error
sqlalchemy.exc.IntegrityError: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.NotNullViolationError'>: null value in column "id_type_worker" of relation "Vacancies" violates not-null constraint
DETAIL:  Failing row contains (39000, Нужен короче крутой такой финансит..., null, 1).
[SQL: UPDATE "Vacancies" SET id_type_worker=$1::INTEGER WHERE "Vacancies".id = $2::INTEGER]
[parameters: (None, 1)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Typeworker".id) AS count_1 
FROM "Typeworker"
INFO:sqlalchemy.engine.Engine:[cached since 107.5s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Typeworker".name_type, "Typeworker".id 
FROM "Typeworker" ORDER BY "Typeworker".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 107.5s ago] (10, 0)
INFO:sqlalchemy.engine.Engine:SELECT "Vacancies".id_type_worker AS "Vacancies_id_type_worker", "Vacancies".salary_employee AS "Vacancies_salary_employee", "Vacancies".description_vacancies AS "Vacancies_description_vacancies", "Vacancies".id AS "Vacancies_id" 
FROM "Vacancies" 
WHERE "Vacancies".id_type_worker IN ($1::INTEGER, $2::INTEGER, $3::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 107.5s ago] (1, 2, 3)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Vacancies".id) AS count_1 
FROM "Vacancies"
INFO:sqlalchemy.engine.Engine:[cached since 75.76s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Vacancies".salary_employee, "Vacancies".description_vacancies, "Vacancies".id_type_worker, "Vacancies".id 
FROM "Vacancies" ORDER BY "Vacancies".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 75.76s ago] (10, 0)
INFO:sqlalchemy.engine.Engine:SELECT "Typeworker".id AS "Typeworker_id", "Typeworker".name_type AS "Typeworker_name_type" 
FROM "Typeworker" 
WHERE "Typeworker".id IN ($1::INTEGER, $2::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 75.76s ago] (1, 3)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Vacancies".salary_employee, "Vacancies".description_vacancies, "Vacancies".id_type_worker, "Vacancies".id 
FROM "Vacancies" 
WHERE "Vacancies".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00011s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Vacancies".salary_employee, "Vacancies".description_vacancies, "Vacancies".id_type_worker, "Vacancies".id 
FROM "Vacancies" 
WHERE "Vacancies".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 0.00227s ago] (1,)
INFO:sqlalchemy.engine.Engine:DELETE FROM "Vacancies" WHERE "Vacancies".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00017s] (1,)
INFO:sqlalchemy.engine.Engine:COMMIT
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Vacancies".id) AS count_1 
FROM "Vacancies"
INFO:sqlalchemy.engine.Engine:[cached since 83.27s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Vacancies".salary_employee, "Vacancies".description_vacancies, "Vacancies".id_type_worker, "Vacancies".id 
FROM "Vacancies" ORDER BY "Vacancies".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 83.27s ago] (10, 0)
INFO:sqlalchemy.engine.Engine:SELECT "Typeworker".id AS "Typeworker_id", "Typeworker".name_type AS "Typeworker_name_type" 
FROM "Typeworker" 
WHERE "Typeworker".id IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 83.27s ago] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Typeworker".id) AS count_1 
FROM "Typeworker"
INFO:sqlalchemy.engine.Engine:[cached since 121.1s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Typeworker".name_type, "Typeworker".id 
FROM "Typeworker" ORDER BY "Typeworker".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 121.1s ago] (10, 0)
INFO:sqlalchemy.engine.Engine:SELECT "Vacancies".id_type_worker AS "Vacancies_id_type_worker", "Vacancies".salary_employee AS "Vacancies_salary_employee", "Vacancies".description_vacancies AS "Vacancies_description_vacancies", "Vacancies".id AS "Vacancies_id" 
FROM "Vacancies" 
WHERE "Vacancies".id_type_worker IN ($1::INTEGER, $2::INTEGER, $3::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 121.1s ago] (1, 2, 3)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Typeworker".name_type, "Typeworker".id 
FROM "Typeworker" 
WHERE "Typeworker".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 61.38s ago] (3,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Typeworker".name_type, "Typeworker".id 
FROM "Typeworker" 
WHERE "Typeworker".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 61.38s ago] (3,)
INFO:sqlalchemy.engine.Engine:SELECT "Vacancies".salary_employee AS "Vacancies_salary_employee", "Vacancies".description_vacancies AS "Vacancies_description_vacancies", "Vacancies".id_type_worker AS "Vacancies_id_type_worker", "Vacancies".id AS "Vacancies_id" 
FROM "Vacancies" 
WHERE $1::INTEGER = "Vacancies".id_type_worker
INFO:sqlalchemy.engine.Engine:[cached since 61.38s ago] (3,)
INFO:sqlalchemy.engine.Engine:DELETE FROM "Typeworker" WHERE "Typeworker".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00019s] (3,)
INFO:sqlalchemy.engine.Engine:COMMIT
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Typeworker".id) AS count_1 
FROM "Typeworker"
INFO:sqlalchemy.engine.Engine:[cached since 134.1s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Typeworker".name_type, "Typeworker".id 
FROM "Typeworker" ORDER BY "Typeworker".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 134.1s ago] (10, 0)
INFO:sqlalchemy.engine.Engine:SELECT "Vacancies".id_type_worker AS "Vacancies_id_type_worker", "Vacancies".salary_employee AS "Vacancies_salary_employee", "Vacancies".description_vacancies AS "Vacancies_description_vacancies", "Vacancies".id AS "Vacancies_id" 
FROM "Vacancies" 
WHERE "Vacancies".id_type_worker IN ($1::INTEGER, $2::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 134.1s ago] (1, 2)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Typeworker".id) AS count_1 
FROM "Typeworker"
INFO:sqlalchemy.engine.Engine:[generated in 0.00015s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Typeworker".name_type, "Typeworker".id 
FROM "Typeworker" ORDER BY "Typeworker".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00023s] (10, 0)
INFO:sqlalchemy.engine.Engine:SELECT "Vacancies".id_type_worker AS "Vacancies_id_type_worker", "Vacancies".salary_employee AS "Vacancies_salary_employee", "Vacancies".description_vacancies AS "Vacancies_description_vacancies", "Vacancies".id AS "Vacancies_id" 
FROM "Vacancies" 
WHERE "Vacancies".id_type_worker IN ($1::INTEGER, $2::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00025s] (1, 2)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Typeworker".id) AS count_1 
FROM "Typeworker"
INFO:sqlalchemy.engine.Engine:[cached since 0.9826s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Typeworker".name_type, "Typeworker".id 
FROM "Typeworker" ORDER BY "Typeworker".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 0.9796s ago] (10, 0)
INFO:sqlalchemy.engine.Engine:SELECT "Vacancies".id_type_worker AS "Vacancies_id_type_worker", "Vacancies".salary_employee AS "Vacancies_salary_employee", "Vacancies".description_vacancies AS "Vacancies_description_vacancies", "Vacancies".id AS "Vacancies_id" 
FROM "Vacancies" 
WHERE "Vacancies".id_type_worker IN ($1::INTEGER, $2::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 0.9768s ago] (1, 2)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:INSERT INTO "Typeworker" (name_type) VALUES ($1::VARCHAR) RETURNING "Typeworker".id
INFO:sqlalchemy.engine.Engine:[generated in 0.00019s] ('Грузчик',)
INFO:sqlalchemy.engine.Engine:COMMIT
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Typeworker".id) AS count_1 
FROM "Typeworker"
INFO:sqlalchemy.engine.Engine:[cached since 11.73s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Typeworker".name_type, "Typeworker".id 
FROM "Typeworker" ORDER BY "Typeworker".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 11.73s ago] (10, 0)
INFO:sqlalchemy.engine.Engine:SELECT "Vacancies".id_type_worker AS "Vacancies_id_type_worker", "Vacancies".salary_employee AS "Vacancies_salary_employee", "Vacancies".description_vacancies AS "Vacancies_description_vacancies", "Vacancies".id AS "Vacancies_id" 
FROM "Vacancies" 
WHERE "Vacancies".id_type_worker IN ($1::INTEGER, $2::INTEGER, $3::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 11.73s ago] (1, 2, 4)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Admin".id) AS count_1 
FROM "Admin"
INFO:sqlalchemy.engine.Engine:[generated in 0.00018s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Admin".email_admin, "Admin".password_user, "Admin".date_create, "Admin".date_update, "Admin".id 
FROM "Admin" ORDER BY "Admin".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00033s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("User".id) AS count_1 
FROM "User"
INFO:sqlalchemy.engine.Engine:[generated in 0.00014s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "User".email_user, "User".password_user, "User".secret_update_key, "User".name_user, "User".surname_user, "User".main_name_user, "User".date_registration, "User".date_update, "User".name_user_address, "User".surname_user_address, "User".name_company_address, "User".country_address, "User".address_street, "User".address_rl_et_home, "User".address_locality, "User".address_area, "User".address_index, "User".address_phone_number, "User".id 
FROM "User" ORDER BY "User".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00031s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Favourite".id) AS count_1 
FROM "Favourite"
INFO:sqlalchemy.engine.Engine:[generated in 0.00014s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_user, "Favourite".id_product, "Favourite".id 
FROM "Favourite" ORDER BY "Favourite".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00019s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Historybuy".id) AS count_1 
FROM "Historybuy"
INFO:sqlalchemy.engine.Engine:[generated in 0.00031s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Historybuy".id_user, "Historybuy".id_product, "Historybuy".id 
FROM "Historybuy" ORDER BY "Historybuy".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00040s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Typeworker".id) AS count_1 
FROM "Typeworker"
INFO:sqlalchemy.engine.Engine:[cached since 43.63s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Typeworker".name_type, "Typeworker".id 
FROM "Typeworker" ORDER BY "Typeworker".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 43.63s ago] (10, 0)
INFO:sqlalchemy.engine.Engine:SELECT "Vacancies".id_type_worker AS "Vacancies_id_type_worker", "Vacancies".salary_employee AS "Vacancies_salary_employee", "Vacancies".description_vacancies AS "Vacancies_description_vacancies", "Vacancies".id AS "Vacancies_id" 
FROM "Vacancies" 
WHERE "Vacancies".id_type_worker IN ($1::INTEGER, $2::INTEGER, $3::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 43.63s ago] (1, 2, 4)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Vacancies".id) AS count_1 
FROM "Vacancies"
INFO:sqlalchemy.engine.Engine:[generated in 0.00013s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Vacancies".salary_employee, "Vacancies".description_vacancies, "Vacancies".id_type_worker, "Vacancies".id 
FROM "Vacancies" ORDER BY "Vacancies".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00016s] (10, 0)
INFO:sqlalchemy.engine.Engine:SELECT "Typeworker".id AS "Typeworker_id", "Typeworker".name_type AS "Typeworker_name_type" 
FROM "Typeworker" 
WHERE "Typeworker".id IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00022s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Typeworker".id) AS count_1 
FROM "Typeworker"
INFO:sqlalchemy.engine.Engine:[cached since 51.5s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Typeworker".name_type, "Typeworker".id 
FROM "Typeworker" ORDER BY "Typeworker".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 51.49s ago] (10, 0)
INFO:sqlalchemy.engine.Engine:SELECT "Vacancies".id_type_worker AS "Vacancies_id_type_worker", "Vacancies".salary_employee AS "Vacancies_salary_employee", "Vacancies".description_vacancies AS "Vacancies_description_vacancies", "Vacancies".id AS "Vacancies_id" 
FROM "Vacancies" 
WHERE "Vacancies".id_type_worker IN ($1::INTEGER, $2::INTEGER, $3::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 51.49s ago] (1, 2, 4)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Vacancies".id) AS count_1 
FROM "Vacancies"
INFO:sqlalchemy.engine.Engine:[cached since 15.29s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Vacancies".salary_employee, "Vacancies".description_vacancies, "Vacancies".id_type_worker, "Vacancies".id 
FROM "Vacancies" ORDER BY "Vacancies".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 15.29s ago] (10, 0)
INFO:sqlalchemy.engine.Engine:SELECT "Typeworker".id AS "Typeworker_id", "Typeworker".name_type AS "Typeworker_name_type" 
FROM "Typeworker" 
WHERE "Typeworker".id IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 15.29s ago] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Typeworker".name_type, "Typeworker".id 
FROM "Typeworker" 
WHERE CAST("Typeworker".id AS VARCHAR) ILIKE $1::VARCHAR OR CAST("Typeworker".name_type AS VARCHAR) ILIKE $2::VARCHAR ORDER BY "Typeworker".id 
 LIMIT $3::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00021s] ('%4%', '%4%', 10)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:INSERT INTO "Vacancies" (salary_employee, description_vacancies, id_type_worker) VALUES ($1::INTEGER, $2::VARCHAR, $3::INTEGER) RETURNING "Vacancies".id
INFO:sqlalchemy.engine.Engine:[generated in 0.00014s] (28000, 'Грузчик номер №1', 4)
INFO:sqlalchemy.engine.Engine:COMMIT
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Vacancies".id) AS count_1 
FROM "Vacancies"
INFO:sqlalchemy.engine.Engine:[cached since 34.99s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Vacancies".salary_employee, "Vacancies".description_vacancies, "Vacancies".id_type_worker, "Vacancies".id 
FROM "Vacancies" ORDER BY "Vacancies".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 34.99s ago] (10, 0)
INFO:sqlalchemy.engine.Engine:SELECT "Typeworker".id AS "Typeworker_id", "Typeworker".name_type AS "Typeworker_name_type" 
FROM "Typeworker" 
WHERE "Typeworker".id IN ($1::INTEGER, $2::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 34.99s ago] (1, 4)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Typeworker".id) AS count_1 
FROM "Typeworker"
INFO:sqlalchemy.engine.Engine:[cached since 84.39s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Typeworker".name_type, "Typeworker".id 
FROM "Typeworker" ORDER BY "Typeworker".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 84.39s ago] (10, 0)
INFO:sqlalchemy.engine.Engine:SELECT "Vacancies".id_type_worker AS "Vacancies_id_type_worker", "Vacancies".salary_employee AS "Vacancies_salary_employee", "Vacancies".description_vacancies AS "Vacancies_description_vacancies", "Vacancies".id AS "Vacancies_id" 
FROM "Vacancies" 
WHERE "Vacancies".id_type_worker IN ($1::INTEGER, $2::INTEGER, $3::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 84.39s ago] (1, 2, 4)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Vacancies".id) AS count_1 
FROM "Vacancies"
INFO:sqlalchemy.engine.Engine:[cached since 48.76s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Vacancies".salary_employee, "Vacancies".description_vacancies, "Vacancies".id_type_worker, "Vacancies".id 
FROM "Vacancies" ORDER BY "Vacancies".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 48.76s ago] (10, 0)
INFO:sqlalchemy.engine.Engine:SELECT "Typeworker".id AS "Typeworker_id", "Typeworker".name_type AS "Typeworker_name_type" 
FROM "Typeworker" 
WHERE "Typeworker".id IN ($1::INTEGER, $2::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 48.76s ago] (1, 4)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Productcategory".id) AS count_1 
FROM "Productcategory"
INFO:sqlalchemy.engine.Engine:[generated in 0.00014s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product, "Productcategory".id_category, "Productcategory".id 
FROM "Productcategory" ORDER BY "Productcategory".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00027s] (10, 0)
INFO:sqlalchemy.engine.Engine:SELECT "Category".id AS "Category_id", "Category".name_category AS "Category_name_category" 
FROM "Category" 
WHERE "Category".id IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00021s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Product".id AS "Product_id", "Product".title_product AS "Product_title_product", "Product".price_product AS "Product_price_product", "Product".quantity_product AS "Product_quantity_product", "Product".explanation_product AS "Product_explanation_product", "Product".article_product AS "Product_article_product", "Product".tags AS "Product_tags", "Product".other_data AS "Product_other_data", "Product".photo_product AS "Product_photo_product", "Product".date_create_product AS "Product_date_create_product", "Product".date_update_information AS "Product_date_update_information", "Product".product_discount AS "Product_product_discount" 
FROM "Product" 
WHERE "Product".id IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00026s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Vacancies".id) AS count_1 
FROM "Vacancies"
INFO:sqlalchemy.engine.Engine:[cached since 54.61s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Vacancies".salary_employee, "Vacancies".description_vacancies, "Vacancies".id_type_worker, "Vacancies".id 
FROM "Vacancies" ORDER BY "Vacancies".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 54.61s ago] (10, 0)
INFO:sqlalchemy.engine.Engine:SELECT "Typeworker".id AS "Typeworker_id", "Typeworker".name_type AS "Typeworker_name_type" 
FROM "Typeworker" 
WHERE "Typeworker".id IN ($1::INTEGER, $2::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 54.61s ago] (1, 4)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("User".id) AS count_1 
FROM "User"
INFO:sqlalchemy.engine.Engine:[cached since 87.46s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "User".email_user, "User".password_user, "User".secret_update_key, "User".name_user, "User".surname_user, "User".main_name_user, "User".date_registration, "User".date_update, "User".name_user_address, "User".surname_user_address, "User".name_company_address, "User".country_address, "User".address_street, "User".address_rl_et_home, "User".address_locality, "User".address_area, "User".address_index, "User".address_phone_number, "User".id 
FROM "User" ORDER BY "User".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 87.45s ago] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Favourite".id) AS count_1 
FROM "Favourite"
INFO:sqlalchemy.engine.Engine:[cached since 90.83s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_user, "Favourite".id_product, "Favourite".id 
FROM "Favourite" ORDER BY "Favourite".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 90.83s ago] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "User".email_user, "User".password_user, "User".secret_update_key, "User".name_user, "User".surname_user, "User".main_name_user, "User".date_registration, "User".date_update, "User".name_user_address, "User".surname_user_address, "User".name_company_address, "User".country_address, "User".address_street, "User".address_rl_et_home, "User".address_locality, "User".address_area, "User".address_index, "User".address_phone_number, "User".id 
FROM "User" 
WHERE CAST("User".id AS VARCHAR) ILIKE $1::VARCHAR OR CAST("User".name_user AS VARCHAR) ILIKE $2::VARCHAR ORDER BY "User".id 
 LIMIT $3::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00017s] ('%1%', '%1%', 10)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE CAST("Product".id AS VARCHAR) ILIKE $1::VARCHAR OR CAST("Product".title_product AS VARCHAR) ILIKE $2::VARCHAR ORDER BY "Product".id 
 LIMIT $3::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00019s] ('%1%', '%1%', 10)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:INSERT INTO "Favourite" (id_user, id_product) VALUES ($1::INTEGER, $2::INTEGER) RETURNING "Favourite".id
INFO:sqlalchemy.engine.Engine:[generated in 0.00015s] (1, 1)
INFO:sqlalchemy.engine.Engine:COMMIT
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Favourite".id) AS count_1 
FROM "Favourite"
INFO:sqlalchemy.engine.Engine:[cached since 112s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_user, "Favourite".id_product, "Favourite".id 
FROM "Favourite" ORDER BY "Favourite".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 112s ago] (10, 0)
INFO:sqlalchemy.engine.Engine:SELECT "Product".id AS "Product_id", "Product".title_product AS "Product_title_product", "Product".price_product AS "Product_price_product", "Product".quantity_product AS "Product_quantity_product", "Product".explanation_product AS "Product_explanation_product", "Product".article_product AS "Product_article_product", "Product".tags AS "Product_tags", "Product".other_data AS "Product_other_data", "Product".photo_product AS "Product_photo_product", "Product".date_create_product AS "Product_date_create_product", "Product".date_update_information AS "Product_date_update_information", "Product".product_discount AS "Product_product_discount" 
FROM "Product" 
WHERE "Product".id IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00040s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "User".id AS "User_id", "User".email_user AS "User_email_user", "User".password_user AS "User_password_user", "User".secret_update_key AS "User_secret_update_key", "User".name_user AS "User_name_user", "User".surname_user AS "User_surname_user", "User".main_name_user AS "User_main_name_user", "User".date_registration AS "User_date_registration", "User".date_update AS "User_date_update", "User".name_user_address AS "User_name_user_address", "User".surname_user_address AS "User_surname_user_address", "User".name_company_address AS "User_name_company_address", "User".country_address AS "User_country_address", "User".address_street AS "User_address_street", "User".address_rl_et_home AS "User_address_rl_et_home", "User".address_locality AS "User_address_locality", "User".address_area AS "User_address_area", "User".address_index AS "User_address_index", "User".address_phone_number AS "User_address_phone_number" 
FROM "User" 
WHERE "User".id IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00055s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_user, "Favourite".id_product, "Favourite".id 
FROM "Favourite" 
WHERE "Favourite".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00014s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Product".id AS "Product_id", "Product".title_product AS "Product_title_product", "Product".price_product AS "Product_price_product", "Product".quantity_product AS "Product_quantity_product", "Product".explanation_product AS "Product_explanation_product", "Product".article_product AS "Product_article_product", "Product".tags AS "Product_tags", "Product".other_data AS "Product_other_data", "Product".photo_product AS "Product_photo_product", "Product".date_create_product AS "Product_date_create_product", "Product".date_update_information AS "Product_date_update_information", "Product".product_discount AS "Product_product_discount" 
FROM "Product" 
WHERE "Product".id IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 13.44s ago] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "User".id AS "User_id", "User".email_user AS "User_email_user", "User".password_user AS "User_password_user", "User".secret_update_key AS "User_secret_update_key", "User".name_user AS "User_name_user", "User".surname_user AS "User_surname_user", "User".main_name_user AS "User_main_name_user", "User".date_registration AS "User_date_registration", "User".date_update AS "User_date_update", "User".name_user_address AS "User_name_user_address", "User".surname_user_address AS "User_surname_user_address", "User".name_company_address AS "User_name_company_address", "User".country_address AS "User_country_address", "User".address_street AS "User_address_street", "User".address_rl_et_home AS "User_address_rl_et_home", "User".address_locality AS "User_address_locality", "User".address_area AS "User_address_area", "User".address_index AS "User_address_index", "User".address_phone_number AS "User_address_phone_number" 
FROM "User" 
WHERE "User".id IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 13.44s ago] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00022s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00021s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_product AS "Review_id_product", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00029s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_product AS "Order_id_product", "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00034s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_product AS "Favourite_id_product", "Favourite".id_user AS "Favourite_id_user", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00035s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product, "Productcategory".id_category, "Productcategory".id 
FROM "Productcategory" 
WHERE "Productcategory".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00014s] (3,)
INFO:sqlalchemy.engine.Engine:SELECT "Category".id AS "Category_id", "Category".name_category AS "Category_name_category" 
FROM "Category" 
WHERE "Category".id IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00040s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Product".id AS "Product_id", "Product".title_product AS "Product_title_product", "Product".price_product AS "Product_price_product", "Product".quantity_product AS "Product_quantity_product", "Product".explanation_product AS "Product_explanation_product", "Product".article_product AS "Product_article_product", "Product".tags AS "Product_tags", "Product".other_data AS "Product_other_data", "Product".photo_product AS "Product_photo_product", "Product".date_create_product AS "Product_date_create_product", "Product".date_update_information AS "Product_date_update_information", "Product".product_discount AS "Product_product_discount" 
FROM "Product" 
WHERE "Product".id IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00033s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Productcategory".id) AS count_1 
FROM "Productcategory"
INFO:sqlalchemy.engine.Engine:[cached since 92.53s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product, "Productcategory".id_category, "Productcategory".id 
FROM "Productcategory" ORDER BY "Productcategory".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 92.5s ago] (10, 0)
INFO:sqlalchemy.engine.Engine:SELECT "Category".id AS "Category_id", "Category".name_category AS "Category_name_category" 
FROM "Category" 
WHERE "Category".id IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 92.5s ago] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Product".id AS "Product_id", "Product".title_product AS "Product_title_product", "Product".price_product AS "Product_price_product", "Product".quantity_product AS "Product_quantity_product", "Product".explanation_product AS "Product_explanation_product", "Product".article_product AS "Product_article_product", "Product".tags AS "Product_tags", "Product".other_data AS "Product_other_data", "Product".photo_product AS "Product_photo_product", "Product".date_create_product AS "Product_date_create_product", "Product".date_update_information AS "Product_date_update_information", "Product".product_discount AS "Product_product_discount" 
FROM "Product" 
WHERE "Product".id IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 92.49s ago] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE CAST("Product".id AS VARCHAR) ILIKE $1::VARCHAR OR CAST("Product".title_product AS VARCHAR) ILIKE $2::VARCHAR ORDER BY "Product".id 
 LIMIT $3::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 52.61s ago] ('%1%', '%1%', 10)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Category".id) AS count_1 
FROM "Category"
INFO:sqlalchemy.engine.Engine:[generated in 0.00011s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".id 
FROM "Category" ORDER BY "Category".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00010s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product, "Productcategory".id_category, "Productcategory".id 
FROM "Productcategory"
INFO:sqlalchemy.engine.Engine:[generated in 0.00012s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product, "Productcategory".id_category, "Productcategory".id 
FROM "Productcategory"
INFO:sqlalchemy.engine.Engine:[cached since 9.769s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:INSERT INTO "Category" (name_category) VALUES ($1::VARCHAR) RETURNING "Category".id
INFO:sqlalchemy.engine.Engine:[generated in 0.00013s] ('Шины',)
INFO:sqlalchemy.engine.Engine:COMMIT
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Category".id) AS count_1 
FROM "Category"
INFO:sqlalchemy.engine.Engine:[cached since 12.1s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".id 
FROM "Category" ORDER BY "Category".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 12.1s ago] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Productcategory".id) AS count_1 
FROM "Productcategory"
INFO:sqlalchemy.engine.Engine:[cached since 119.2s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product, "Productcategory".id_category, "Productcategory".id 
FROM "Productcategory" ORDER BY "Productcategory".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 119.2s ago] (10, 0)
INFO:sqlalchemy.engine.Engine:SELECT "Category".id AS "Category_id", "Category".name_category AS "Category_name_category" 
FROM "Category" 
WHERE "Category".id IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 119.2s ago] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Product".id AS "Product_id", "Product".title_product AS "Product_title_product", "Product".price_product AS "Product_price_product", "Product".quantity_product AS "Product_quantity_product", "Product".explanation_product AS "Product_explanation_product", "Product".article_product AS "Product_article_product", "Product".tags AS "Product_tags", "Product".other_data AS "Product_other_data", "Product".photo_product AS "Product_photo_product", "Product".date_create_product AS "Product_date_create_product", "Product".date_update_information AS "Product_date_update_information", "Product".product_discount AS "Product_product_discount" 
FROM "Product" 
WHERE "Product".id IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 119.2s ago] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE CAST("Product".id AS VARCHAR) ILIKE $1::VARCHAR OR CAST("Product".title_product AS VARCHAR) ILIKE $2::VARCHAR ORDER BY "Product".id 
 LIMIT $3::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 77.22s ago] ('%1%', '%1%', 10)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".id 
FROM "Category" 
WHERE CAST("Category".id AS VARCHAR) ILIKE $1::VARCHAR OR CAST("Category".name_category AS VARCHAR) ILIKE $2::VARCHAR ORDER BY "Category".id 
 LIMIT $3::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00018s] ('%4%', '%4%', 10)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:INSERT INTO "Productcategory" (id_product, id_category) VALUES ($1::INTEGER, $2::INTEGER) RETURNING "Productcategory".id
INFO:sqlalchemy.engine.Engine:[generated in 0.00016s] (1, 4)
INFO:sqlalchemy.engine.Engine:COMMIT
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Productcategory".id) AS count_1 
FROM "Productcategory"
INFO:sqlalchemy.engine.Engine:[cached since 128.5s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product, "Productcategory".id_category, "Productcategory".id 
FROM "Productcategory" ORDER BY "Productcategory".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 128.5s ago] (10, 0)
INFO:sqlalchemy.engine.Engine:SELECT "Category".id AS "Category_id", "Category".name_category AS "Category_name_category" 
FROM "Category" 
WHERE "Category".id IN ($1::INTEGER, $2::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 128.5s ago] (1, 4)
INFO:sqlalchemy.engine.Engine:SELECT "Product".id AS "Product_id", "Product".title_product AS "Product_title_product", "Product".price_product AS "Product_price_product", "Product".quantity_product AS "Product_quantity_product", "Product".explanation_product AS "Product_explanation_product", "Product".article_product AS "Product_article_product", "Product".tags AS "Product_tags", "Product".other_data AS "Product_other_data", "Product".photo_product AS "Product_photo_product", "Product".date_create_product AS "Product_date_create_product", "Product".date_update_information AS "Product_date_update_information", "Product".product_discount AS "Product_product_discount" 
FROM "Product" 
WHERE "Product".id IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 128.5s ago] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Product".id) AS count_1 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[generated in 0.00011s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" ORDER BY "Product".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00018s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 83.9s ago] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 83.9s ago] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_product AS "Review_id_product", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 83.9s ago] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_product AS "Order_id_product", "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 83.89s ago] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_product AS "Favourite_id_product", "Favourite".id_user AS "Favourite_id_user", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 83.88s ago] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00030s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00032s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_product AS "Review_id_product", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00051s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_product AS "Order_id_product", "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00384s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_product AS "Favourite_id_product", "Favourite".id_user AS "Favourite_id_user", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00034s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Product".id) AS count_1 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[generated in 0.00026s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" ORDER BY "Product".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00064s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00023s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00034s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_product AS "Review_id_product", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00059s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_product AS "Order_id_product", "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00037s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_product AS "Favourite_id_product", "Favourite".id_user AS "Favourite_id_user", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00055s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00028s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00081s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_product AS "Review_id_product", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00069s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_product AS "Order_id_product", "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00050s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_product AS "Favourite_id_product", "Favourite".id_user AS "Favourite_id_user", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00051s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Product".id) AS count_1 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[generated in 0.00037s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" ORDER BY "Product".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00030s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00021s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00051s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_product AS "Review_id_product", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00027s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_product AS "Order_id_product", "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00075s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_product AS "Favourite_id_product", "Favourite".id_user AS "Favourite_id_user", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00058s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00037s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00031s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_product AS "Review_id_product", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00055s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_product AS "Order_id_product", "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00026s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_product AS "Favourite_id_product", "Favourite".id_user AS "Favourite_id_user", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00024s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00031s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00044s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_product AS "Review_id_product", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00032s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_product AS "Order_id_product", "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00041s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_product AS "Favourite_id_product", "Favourite".id_user AS "Favourite_id_user", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00056s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00035s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00052s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_product AS "Review_id_product", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00045s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_product AS "Order_id_product", "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00033s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_product AS "Favourite_id_product", "Favourite".id_user AS "Favourite_id_user", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00025s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00039s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00029s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_product AS "Review_id_product", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00040s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_product AS "Order_id_product", "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00032s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_product AS "Favourite_id_product", "Favourite".id_user AS "Favourite_id_user", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00031s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Review".id) AS count_1 
FROM "Review"
INFO:sqlalchemy.engine.Engine:[generated in 0.00019s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Review".text_review, "Review".estimation_review, "Review".id_user, "Review".id_product, "Review".id 
FROM "Review" ORDER BY "Review".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00023s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Product".id) AS count_1 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[generated in 0.00020s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" ORDER BY "Product".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00013s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 7.51s ago] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 7.507s ago] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_product AS "Review_id_product", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 7.505s ago] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_product AS "Order_id_product", "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 7.505s ago] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_product AS "Favourite_id_product", "Favourite".id_user AS "Favourite_id_user", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 7.503s ago] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00036s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00055s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_product AS "Review_id_product", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00038s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_product AS "Order_id_product", "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00039s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_product AS "Favourite_id_product", "Favourite".id_user AS "Favourite_id_user", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00034s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Review".text_review, "Review".estimation_review, "Review".id_user, "Review".id_product, "Review".id 
FROM "Review" 
WHERE "Review".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00023s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "User".id AS "User_id", "User".email_user AS "User_email_user", "User".password_user AS "User_password_user", "User".secret_update_key AS "User_secret_update_key", "User".name_user AS "User_name_user", "User".surname_user AS "User_surname_user", "User".main_name_user AS "User_main_name_user", "User".date_registration AS "User_date_registration", "User".date_update AS "User_date_update", "User".name_user_address AS "User_name_user_address", "User".surname_user_address AS "User_surname_user_address", "User".name_company_address AS "User_name_company_address", "User".country_address AS "User_country_address", "User".address_street AS "User_address_street", "User".address_rl_et_home AS "User_address_rl_et_home", "User".address_locality AS "User_address_locality", "User".address_area AS "User_address_area", "User".address_index AS "User_address_index", "User".address_phone_number AS "User_address_phone_number" 
FROM "User" 
WHERE "User".id IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00029s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Product".id AS "Product_id", "Product".title_product AS "Product_title_product", "Product".price_product AS "Product_price_product", "Product".quantity_product AS "Product_quantity_product", "Product".explanation_product AS "Product_explanation_product", "Product".article_product AS "Product_article_product", "Product".tags AS "Product_tags", "Product".other_data AS "Product_other_data", "Product".photo_product AS "Product_photo_product", "Product".date_create_product AS "Product_date_create_product", "Product".date_update_information AS "Product_date_update_information", "Product".product_discount AS "Product_product_discount" 
FROM "Product" 
WHERE "Product".id IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00025s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Review".text_review, "Review".estimation_review, "Review".id_user, "Review".id_product, "Review".id 
FROM "Review" 
WHERE "Review".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00037s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "User".id AS "User_id", "User".email_user AS "User_email_user", "User".password_user AS "User_password_user", "User".secret_update_key AS "User_secret_update_key", "User".name_user AS "User_name_user", "User".surname_user AS "User_surname_user", "User".main_name_user AS "User_main_name_user", "User".date_registration AS "User_date_registration", "User".date_update AS "User_date_update", "User".name_user_address AS "User_name_user_address", "User".surname_user_address AS "User_surname_user_address", "User".name_company_address AS "User_name_company_address", "User".country_address AS "User_country_address", "User".address_street AS "User_address_street", "User".address_rl_et_home AS "User_address_rl_et_home", "User".address_locality AS "User_address_locality", "User".address_area AS "User_address_area", "User".address_index AS "User_address_index", "User".address_phone_number AS "User_address_phone_number" 
FROM "User" 
WHERE "User".id IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00042s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Product".id AS "Product_id", "Product".title_product AS "Product_title_product", "Product".price_product AS "Product_price_product", "Product".quantity_product AS "Product_quantity_product", "Product".explanation_product AS "Product_explanation_product", "Product".article_product AS "Product_article_product", "Product".tags AS "Product_tags", "Product".other_data AS "Product_other_data", "Product".photo_product AS "Product_photo_product", "Product".date_create_product AS "Product_date_create_product", "Product".date_update_information AS "Product_date_update_information", "Product".product_discount AS "Product_product_discount" 
FROM "Product" 
WHERE "Product".id IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00028s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Order".id) AS count_1 
FROM "Order"
INFO:sqlalchemy.engine.Engine:[generated in 0.00016s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Order".date_buy, "Order".id_user, "Order".id_product, "Order".id 
FROM "Order" ORDER BY "Order".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00024s] (10, 0)
INFO:sqlalchemy.engine.Engine:SELECT "Product".id AS "Product_id", "Product".title_product AS "Product_title_product", "Product".price_product AS "Product_price_product", "Product".quantity_product AS "Product_quantity_product", "Product".explanation_product AS "Product_explanation_product", "Product".article_product AS "Product_article_product", "Product".tags AS "Product_tags", "Product".other_data AS "Product_other_data", "Product".photo_product AS "Product_photo_product", "Product".date_create_product AS "Product_date_create_product", "Product".date_update_information AS "Product_date_update_information", "Product".product_discount AS "Product_product_discount" 
FROM "Product" 
WHERE "Product".id IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00025s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "User".id AS "User_id", "User".email_user AS "User_email_user", "User".password_user AS "User_password_user", "User".secret_update_key AS "User_secret_update_key", "User".name_user AS "User_name_user", "User".surname_user AS "User_surname_user", "User".main_name_user AS "User_main_name_user", "User".date_registration AS "User_date_registration", "User".date_update AS "User_date_update", "User".name_user_address AS "User_name_user_address", "User".surname_user_address AS "User_surname_user_address", "User".name_company_address AS "User_name_company_address", "User".country_address AS "User_country_address", "User".address_street AS "User_address_street", "User".address_rl_et_home AS "User_address_rl_et_home", "User".address_locality AS "User_address_locality", "User".address_area AS "User_address_area", "User".address_index AS "User_address_index", "User".address_phone_number AS "User_address_phone_number" 
FROM "User" 
WHERE "User".id IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00041s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Order".date_buy, "Order".id_user, "Order".id_product, "Order".id 
FROM "Order" 
WHERE "Order".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00012s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Product".id AS "Product_id", "Product".title_product AS "Product_title_product", "Product".price_product AS "Product_price_product", "Product".quantity_product AS "Product_quantity_product", "Product".explanation_product AS "Product_explanation_product", "Product".article_product AS "Product_article_product", "Product".tags AS "Product_tags", "Product".other_data AS "Product_other_data", "Product".photo_product AS "Product_photo_product", "Product".date_create_product AS "Product_date_create_product", "Product".date_update_information AS "Product_date_update_information", "Product".product_discount AS "Product_product_discount" 
FROM "Product" 
WHERE "Product".id IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 3.353s ago] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "User".id AS "User_id", "User".email_user AS "User_email_user", "User".password_user AS "User_password_user", "User".secret_update_key AS "User_secret_update_key", "User".name_user AS "User_name_user", "User".surname_user AS "User_surname_user", "User".main_name_user AS "User_main_name_user", "User".date_registration AS "User_date_registration", "User".date_update AS "User_date_update", "User".name_user_address AS "User_name_user_address", "User".surname_user_address AS "User_surname_user_address", "User".name_company_address AS "User_name_company_address", "User".country_address AS "User_country_address", "User".address_street AS "User_address_street", "User".address_rl_et_home AS "User_address_rl_et_home", "User".address_locality AS "User_address_locality", "User".address_area AS "User_address_area", "User".address_index AS "User_address_index", "User".address_phone_number AS "User_address_phone_number" 
FROM "User" 
WHERE "User".id IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 3.352s ago] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Product".id) AS count_1 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[generated in 0.00014s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" ORDER BY "Product".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00014s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00043s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00028s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_product AS "Review_id_product", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00043s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_product AS "Order_id_product", "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00028s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_product AS "Favourite_id_product", "Favourite".id_user AS "Favourite_id_user", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00033s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00037s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00028s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_product AS "Review_id_product", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00043s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_product AS "Order_id_product", "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00038s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_product AS "Favourite_id_product", "Favourite".id_user AS "Favourite_id_user", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00023s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00037s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00033s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_product AS "Review_id_product", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00053s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_product AS "Order_id_product", "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00023s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_product AS "Favourite_id_product", "Favourite".id_user AS "Favourite_id_user", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00040s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Product".id) AS count_1 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[generated in 0.00015s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" ORDER BY "Product".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00017s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 15.61s ago] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 15.6s ago] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_product AS "Review_id_product", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 15.59s ago] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_product AS "Order_id_product", "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 15.59s ago] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_product AS "Favourite_id_product", "Favourite".id_user AS "Favourite_id_user", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 15.58s ago] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Product".id) AS count_1 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[generated in 0.00029s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" ORDER BY "Product".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00021s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00022s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00022s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_product AS "Review_id_product", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00032s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_product AS "Order_id_product", "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00029s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_product AS "Favourite_id_product", "Favourite".id_user AS "Favourite_id_user", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00034s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Product".id) AS count_1 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[generated in 0.00024s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" ORDER BY "Product".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00025s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00031s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00024s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_product AS "Review_id_product", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00024s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_product AS "Order_id_product", "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00024s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_product AS "Favourite_id_product", "Favourite".id_user AS "Favourite_id_user", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00024s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Product".id) AS count_1 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[generated in 0.00028s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" ORDER BY "Product".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00041s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00019s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00026s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_product AS "Review_id_product", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00029s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_product AS "Order_id_product", "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00025s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_product AS "Favourite_id_product", "Favourite".id_user AS "Favourite_id_user", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00029s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00035s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00028s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_product AS "Review_id_product", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00025s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_product AS "Order_id_product", "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00039s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_product AS "Favourite_id_product", "Favourite".id_user AS "Favourite_id_user", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00056s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00025s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00026s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_product AS "Review_id_product", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00055s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_product AS "Order_id_product", "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00031s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_product AS "Favourite_id_product", "Favourite".id_user AS "Favourite_id_user", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00025s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00037s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00035s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_product AS "Review_id_product", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00035s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_product AS "Order_id_product", "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00029s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_product AS "Favourite_id_product", "Favourite".id_user AS "Favourite_id_user", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00028s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00031s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00041s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_product AS "Review_id_product", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00030s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_product AS "Order_id_product", "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00023s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_product AS "Favourite_id_product", "Favourite".id_user AS "Favourite_id_user", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00028s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00035s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00042s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_product AS "Review_id_product", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00050s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_product AS "Order_id_product", "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00046s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_product AS "Favourite_id_product", "Favourite".id_user AS "Favourite_id_user", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00029s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00040s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00048s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_product AS "Review_id_product", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00035s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_product AS "Order_id_product", "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00034s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_product AS "Favourite_id_product", "Favourite".id_user AS "Favourite_id_user", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00029s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 2.405s ago] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 2.402s ago] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_product AS "Review_id_product", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 2.399s ago] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_product AS "Order_id_product", "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 2.398s ago] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_product AS "Favourite_id_product", "Favourite".id_user AS "Favourite_id_user", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 2.395s ago] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Review".id) AS count_1 
FROM "Review"
INFO:sqlalchemy.engine.Engine:[generated in 0.00013s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Review".text_review, "Review".estimation_review, "Review".id_user, "Review".id_product, "Review".id 
FROM "Review" ORDER BY "Review".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00017s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Product".id) AS count_1 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[generated in 0.00019s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" ORDER BY "Product".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00023s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 6.546s ago] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 6.54s ago] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_product AS "Review_id_product", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 6.537s ago] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_product AS "Order_id_product", "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 6.536s ago] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_product AS "Favourite_id_product", "Favourite".id_user AS "Favourite_id_user", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 6.533s ago] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00031s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00038s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_product AS "Review_id_product", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00037s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_product AS "Order_id_product", "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00025s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_product AS "Favourite_id_product", "Favourite".id_user AS "Favourite_id_user", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00022s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00030s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00026s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_product AS "Review_id_product", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00034s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_product AS "Order_id_product", "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00049s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_product AS "Favourite_id_product", "Favourite".id_user AS "Favourite_id_user", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00030s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00055s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00065s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_product AS "Review_id_product", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00123s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_product AS "Order_id_product", "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00033s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_product AS "Favourite_id_product", "Favourite".id_user AS "Favourite_id_user", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00032s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Review".id) AS count_1 
FROM "Review"
INFO:sqlalchemy.engine.Engine:[generated in 0.00022s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Review".text_review, "Review".estimation_review, "Review".id_user, "Review".id_product, "Review".id 
FROM "Review" ORDER BY "Review".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00017s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Product".id) AS count_1 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[generated in 0.00017s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" ORDER BY "Product".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00022s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00019s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00024s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_product AS "Review_id_product", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00031s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_product AS "Order_id_product", "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00044s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_product AS "Favourite_id_product", "Favourite".id_user AS "Favourite_id_user", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00036s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Product".id) AS count_1 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[generated in 0.00018s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" ORDER BY "Product".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00022s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:src.api.authentication.hash_service.hashing:Хеширование изображения
INFO:root:Image Saver (Admin Panel) сохранение фотографии в директории
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:INSERT INTO "Product" (title_product, price_product, quantity_product, explanation_product, article_product, tags, other_data, photo_product, date_create_product, date_update_information, product_discount) VALUES ($1::VARCHAR, $2::FLOAT, $3::INTEGER, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR, $8::VARCHAR, $9::DATE, $10::DATE, $11::INTEGER) RETURNING "Product".id
INFO:sqlalchemy.engine.Engine:[generated in 0.00027s] ('ПОдцепка для мотоцикла', Decimal('999'), 88, 'Пояснение к товару', 'лоалдтывтаолывтаоываолто', 'олаолывоаоылоалыв', '', '$2hEgW2vhXmA__3448858.eps', datetime.date(2024, 9, 24), datetime.date(2024, 9, 24), 0)
INFO:sqlalchemy.engine.Engine:COMMIT
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Product".id) AS count_1 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[cached since 40.5s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" ORDER BY "Product".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 40.5s ago] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00021s] (18,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00023s] (18,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_product AS "Review_id_product", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00025s] (18,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_product AS "Order_id_product", "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00044s] (18,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_product AS "Favourite_id_product", "Favourite".id_user AS "Favourite_id_user", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00036s] (18,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Order".id) AS count_1 
FROM "Order"
INFO:sqlalchemy.engine.Engine:[generated in 0.00024s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Order".date_buy, "Order".id_user, "Order".id_product, "Order".id 
FROM "Order" ORDER BY "Order".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00201s] (10, 0)
INFO:sqlalchemy.engine.Engine:SELECT "Product".id AS "Product_id", "Product".title_product AS "Product_title_product", "Product".price_product AS "Product_price_product", "Product".quantity_product AS "Product_quantity_product", "Product".explanation_product AS "Product_explanation_product", "Product".article_product AS "Product_article_product", "Product".tags AS "Product_tags", "Product".other_data AS "Product_other_data", "Product".photo_product AS "Product_photo_product", "Product".date_create_product AS "Product_date_create_product", "Product".date_update_information AS "Product_date_update_information", "Product".product_discount AS "Product_product_discount" 
FROM "Product" 
WHERE "Product".id IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00046s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "User".id AS "User_id", "User".email_user AS "User_email_user", "User".password_user AS "User_password_user", "User".secret_update_key AS "User_secret_update_key", "User".name_user AS "User_name_user", "User".surname_user AS "User_surname_user", "User".main_name_user AS "User_main_name_user", "User".date_registration AS "User_date_registration", "User".date_update AS "User_date_update", "User".name_user_address AS "User_name_user_address", "User".surname_user_address AS "User_surname_user_address", "User".name_company_address AS "User_name_company_address", "User".country_address AS "User_country_address", "User".address_street AS "User_address_street", "User".address_rl_et_home AS "User_address_rl_et_home", "User".address_locality AS "User_address_locality", "User".address_area AS "User_address_area", "User".address_index AS "User_address_index", "User".address_phone_number AS "User_address_phone_number" 
FROM "User" 
WHERE "User".id IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00055s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Product".id) AS count_1 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[generated in 0.00013s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" ORDER BY "Product".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00016s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00023s] (18,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00030s] (18,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_product AS "Review_id_product", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00031s] (18,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_product AS "Order_id_product", "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00025s] (18,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_product AS "Favourite_id_product", "Favourite".id_user AS "Favourite_id_user", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00034s] (18,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Product".id) AS count_1 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[cached since 11.61s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" ORDER BY "Product".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 11.61s ago] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 17.11s ago] (18,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 17.11s ago] (18,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_product AS "Review_id_product", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 17.11s ago] (18,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_product AS "Order_id_product", "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 17.1s ago] (18,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_product AS "Favourite_id_product", "Favourite".id_user AS "Favourite_id_user", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 17.1s ago] (18,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Product".id) AS count_1 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[generated in 0.00036s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" ORDER BY "Product".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00041s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00021s] (18,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00025s] (18,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_product AS "Review_id_product", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00035s] (18,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_product AS "Order_id_product", "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00060s] (18,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_product AS "Favourite_id_product", "Favourite".id_user AS "Favourite_id_user", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00040s] (18,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00031s] (18,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00038s] (18,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_product AS "Review_id_product", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00049s] (18,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_product AS "Order_id_product", "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00062s] (18,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_product AS "Favourite_id_product", "Favourite".id_user AS "Favourite_id_user", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00030s] (18,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Product".id) AS count_1 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[generated in 0.00040s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" ORDER BY "Product".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00032s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00033s] (18,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00090s] (18,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_product AS "Review_id_product", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00106s] (18,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_product AS "Order_id_product", "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00042s] (18,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_product AS "Favourite_id_product", "Favourite".id_user AS "Favourite_id_user", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00027s] (18,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Product".id) AS count_1 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[generated in 0.00028s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" ORDER BY "Product".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00032s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00029s] (18,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00026s] (18,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_product AS "Review_id_product", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00029s] (18,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_product AS "Order_id_product", "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00028s] (18,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_product AS "Favourite_id_product", "Favourite".id_user AS "Favourite_id_user", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00038s] (18,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00027s] (18,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 0.002619s ago] (18,)
INFO:root:Image Saver Картинка была успешно удалена
ERROR:root:Image Saver не удалось удалить картинку
Traceback (most recent call last):
  File "/home/rias/Рабочий стол/ScooterProject/Scooter24_2/ScooterBackend/src/other/image/image_saver.py", line 54, in remove_file
    remove(path=self.init_url + self.filename)
FileNotFoundError: [Errno 2] No such file or directory: 'src/static/images/$2hEgW2vhXmA__3448858.eps'
INFO:sqlalchemy.engine.Engine:SELECT "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id_product AS "Review_id_product", "Review".id AS "Review_id" 
FROM "Review" 
WHERE $1::INTEGER = "Review".id_product
INFO:sqlalchemy.engine.Engine:[generated in 0.00020s] (18,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id_product AS "Order_id_product", "Order".id AS "Order_id" 
FROM "Order" 
WHERE $1::INTEGER = "Order".id_product
INFO:sqlalchemy.engine.Engine:[generated in 0.00026s] (18,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_user AS "Favourite_id_user", "Favourite".id_product AS "Favourite_id_product", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE $1::INTEGER = "Favourite".id_product
INFO:sqlalchemy.engine.Engine:[generated in 0.00031s] (18,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE $1::INTEGER = "Productcategory".id_product
INFO:sqlalchemy.engine.Engine:[generated in 0.00026s] (18,)
INFO:sqlalchemy.engine.Engine:DELETE FROM "Product" WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00030s] (18,)
INFO:sqlalchemy.engine.Engine:COMMIT
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Product".id) AS count_1 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[cached since 41.29s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" ORDER BY "Product".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 41.28s ago] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:src.api.authentication.hash_service.hashing:Хеширование изображения
INFO:root:Image Saver (Admin Panel) сохранение фотографии в директории
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:INSERT INTO "Product" (title_product, price_product, quantity_product, explanation_product, article_product, tags, other_data, photo_product, date_create_product, date_update_information, product_discount) VALUES ($1::VARCHAR, $2::FLOAT, $3::INTEGER, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR, $8::VARCHAR, $9::DATE, $10::DATE, $11::INTEGER) RETURNING "Product".id
INFO:sqlalchemy.engine.Engine:[generated in 0.00026s] ('dslakldkasdsa', Decimal('1024'), 33, 'sdal;dklakldl;', 'lkfkdklgklfd', 'tag1 tag2', '', '$2aXkoxyu5yW__Волчий Дождь.jpeg', datetime.date(2024, 9, 24), datetime.date(2024, 9, 24), 0)
INFO:sqlalchemy.engine.Engine:COMMIT
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Product".id) AS count_1 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[cached since 62.83s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" ORDER BY "Product".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 62.83s ago] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 62.5s ago] (19,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 62.5s ago] (19,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_product AS "Review_id_product", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 62.5s ago] (19,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_product AS "Order_id_product", "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 62.5s ago] (19,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_product AS "Favourite_id_product", "Favourite".id_user AS "Favourite_id_user", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 62.5s ago] (19,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00039s] (19,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00033s] (19,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_product AS "Review_id_product", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00028s] (19,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_product AS "Order_id_product", "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00057s] (19,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_product AS "Favourite_id_product", "Favourite".id_user AS "Favourite_id_user", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00027s] (19,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 9.427s ago] (19,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 9.425s ago] (19,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_product AS "Review_id_product", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 9.423s ago] (19,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_product AS "Order_id_product", "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 9.421s ago] (19,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_product AS "Favourite_id_product", "Favourite".id_user AS "Favourite_id_user", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 9.42s ago] (19,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 20.85s ago] (19,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 20.85s ago] (19,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_product AS "Review_id_product", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 20.85s ago] (19,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_product AS "Order_id_product", "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 20.85s ago] (19,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_product AS "Favourite_id_product", "Favourite".id_user AS "Favourite_id_user", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 20.84s ago] (19,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 20.87s ago] (19,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 20.87s ago] (19,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_product AS "Review_id_product", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 20.87s ago] (19,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_product AS "Order_id_product", "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 20.87s ago] (19,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_product AS "Favourite_id_product", "Favourite".id_user AS "Favourite_id_user", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 20.86s ago] (19,)
INFO:src.api.authentication.hash_service.hashing:Хеширование изображения
INFO:root:Image Saver (Admin Panel) сохранение фотографии в директории
ERROR:root:Image Saver Не удалось сохранить файл
Traceback (most recent call last):
  File "/home/rias/Рабочий стол/ScooterProject/Scooter24_2/ScooterBackend/src/other/image/image_saver.py", line 34, in save_file
    with open(
         ^^^^^
FileNotFoundError: [Errno 2] No such file or directory: 'src/static/images/$22NySVx/uUc__3418816.jpg'
INFO:sqlalchemy.engine.Engine:ROLLBACK
ERROR:sqladmin.application:Не удалось создать модель
Traceback (most recent call last):
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqladmin/application.py", line 590, in edit
    obj = await model_view.update_model(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqladmin/models.py", line 1006, in update_model
    return await Query(self).update(pk, data, request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqladmin/_queries.py", line 232, in update
    return await self._update_async(pk, data, request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqladmin/_queries.py", line 162, in _update_async
    await self.model_view.on_model_change(data, obj, False, request)
  File "/home/rias/Рабочий стол/ScooterProject/Scooter24_2/ScooterBackend/src/admin/models/product_admin_model.py", line 108, in on_model_change
    raise SQLAdminException("Не удалось создать модель")
sqladmin.exceptions.SQLAdminException: Не удалось создать модель
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00051s] (19,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00031s] (19,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_product AS "Review_id_product", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00044s] (19,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_product AS "Order_id_product", "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00043s] (19,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_product AS "Favourite_id_product", "Favourite".id_user AS "Favourite_id_user", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00024s] (19,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 0.0265s ago] (19,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 0.0238s ago] (19,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_product AS "Review_id_product", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 0.0217s ago] (19,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_product AS "Order_id_product", "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 0.01931s ago] (19,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_product AS "Favourite_id_product", "Favourite".id_user AS "Favourite_id_user", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 0.01744s ago] (19,)
INFO:src.api.authentication.hash_service.hashing:Хеширование изображения
INFO:root:Image Saver (Admin Panel) сохранение фотографии в директории
INFO:sqlalchemy.engine.Engine:UPDATE "Product" SET other_data=$1::VARCHAR, photo_product=$2::VARCHAR WHERE "Product".id = $3::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00022s] (None, '$2HAdNog495M__3418816.jpg', 19)
INFO:sqlalchemy.engine.Engine:COMMIT
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Product".id) AS count_1 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[generated in 0.00031s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" ORDER BY "Product".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00032s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 21.93s ago] (19,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 21.92s ago] (19,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_product AS "Review_id_product", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 21.92s ago] (19,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_product AS "Order_id_product", "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 21.92s ago] (19,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_product AS "Favourite_id_product", "Favourite".id_user AS "Favourite_id_user", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 21.92s ago] (19,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - проверка прав пользователя (на администратора), email=darkfos@gmail.com
INFO:src.api.authentication.hash_service.hashing:Хеширование пароля
INFO:src.database.repository.admin_repository:AdminRepository Запрос на получение данных по почте и паролю email=darkfos@gmail.com; password=$2b$12$vUmjoejZUgQvacVTfwVlvukD8oHVVtzMNa/OAK6aUdiPvHge0mCru
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Admin".email_admin, "Admin".password_user, "Admin".date_create, "Admin".date_update, "Admin".id 
FROM "Admin" 
WHERE "Admin".email_admin = $1::VARCHAR
INFO:sqlalchemy.engine.Engine:[generated in 0.00023s] ('darkfos@gmail.com',)
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Product".id) AS count_1 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[generated in 0.00022s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" ORDER BY "Product".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00031s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
ERROR:asyncio:Fatal error on SSL protocol
protocol: <uvloop.loop.SSLProtocol object at 0x7970702a8ca0>
transport: <TCPTransport closed=True reading=False 0x3aea9e0>
Traceback (most recent call last):
  File "uvloop/sslproto.pyx", line 669, in uvloop.loop.SSLProtocol._write_appdata
  File "uvloop/sslproto.pyx", line 699, in uvloop.loop.SSLProtocol._process_outgoing
  File "uvloop/handles/stream.pyx", line 674, in uvloop.loop.UVStream.write
  File "uvloop/handles/handle.pyx", line 159, in uvloop.loop.UVHandle._ensure_alive
RuntimeError: unable to perform operation on <TCPTransport closed=True reading=False 0x3aea9e0>; the handler is closed
ERROR:sqlalchemy.pool.impl.AsyncAdaptedQueuePool:The garbage collector is trying to clean up non-checked-in connection <AdaptedConnection <asyncpg.connection.Connection object at 0x7970702d87d0>>, which will be terminated.  Please ensure that SQLAlchemy pooled connections are returned to the pool explicitly, either by calling ``close()`` or by using appropriate context managers to manage their lifecycle.
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - проверка прав пользователя (на администратора), email=darkfos@gmail.com
INFO:src.api.authentication.hash_service.hashing:Хеширование пароля
INFO:src.database.repository.admin_repository:AdminRepository Запрос на получение данных по почте и паролю email=darkfos@gmail.com; password=$2b$12$bYq2ovXs94ia/uvVAszoyu.3yYQ024VyNk1rSMxmRXfAkFj9Olcyq
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Admin".email_admin, "Admin".password_user, "Admin".date_create, "Admin".date_update, "Admin".id 
FROM "Admin" 
WHERE "Admin".email_admin = $1::VARCHAR
INFO:sqlalchemy.engine.Engine:[generated in 0.00024s] ('darkfos@gmail.com',)
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Category".id) AS count_1 
FROM "Category"
INFO:sqlalchemy.engine.Engine:[generated in 0.00033s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category" ORDER BY "Category".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00035s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
ERROR:sqlalchemy.pool.impl.AsyncAdaptedQueuePool:The garbage collector is trying to clean up non-checked-in connection <AdaptedConnection <asyncpg.connection.Connection object at 0x78a70300c7d0>>, which will be terminated.  Please ensure that SQLAlchemy pooled connections are returned to the pool explicitly, either by calling ``close()`` or by using appropriate context managers to manage their lifecycle.
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category" 
WHERE "Category".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00038s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_category IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00050s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product, "Productcategory".id_category, "Productcategory".id 
FROM "Productcategory"
INFO:sqlalchemy.engine.Engine:[generated in 0.00050s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Category".id) AS count_1 
FROM "Category"
INFO:sqlalchemy.engine.Engine:[cached since 7.744s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category" ORDER BY "Category".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 7.708s ago] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Category".id) AS count_1 
FROM "Category"
INFO:sqlalchemy.engine.Engine:[generated in 0.00023s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category" ORDER BY "Category".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00031s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category" 
WHERE "Category".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00024s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_category IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00024s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product, "Productcategory".id_category, "Productcategory".id 
FROM "Productcategory"
INFO:sqlalchemy.engine.Engine:[generated in 0.00013s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category" 
WHERE "Category".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00023s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_category IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00048s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product, "Productcategory".id_category, "Productcategory".id 
FROM "Productcategory"
INFO:sqlalchemy.engine.Engine:[generated in 0.00018s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category" 
WHERE "Category".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 6.088s ago] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_category IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 6.086s ago] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product, "Productcategory".id_category, "Productcategory".id 
FROM "Productcategory"
INFO:sqlalchemy.engine.Engine:[cached since 6.083s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category" 
WHERE "Category".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 6.098s ago] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_category IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 6.096s ago] (1,)
INFO:src.api.authentication.hash_service.hashing:Хеширование изображения
INFO:root:Image Saver (Admin Panel) сохранение фотографии в директории
INFO:sqlalchemy.engine.Engine:UPDATE "Category" SET icon_category=$1::VARCHAR WHERE "Category".id = $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00023s] ('$2gqE1UxtwXf__dbeaver.png', 1)
INFO:sqlalchemy.engine.Engine:COMMIT
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Category".id) AS count_1 
FROM "Category"
INFO:sqlalchemy.engine.Engine:[generated in 0.00019s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category" ORDER BY "Category".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00021s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category" 
WHERE "Category".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 9.5s ago] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_category IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 9.497s ago] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category" 
WHERE "Category".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00035s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_category IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00047s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Category".id) AS count_1 
FROM "Category"
INFO:sqlalchemy.engine.Engine:[generated in 0.00015s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category" ORDER BY "Category".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00037s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category" 
WHERE "Category".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 9.137s ago] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_category IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 9.133s ago] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Product".id) AS count_1 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[generated in 0.00016s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" ORDER BY "Product".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00022s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00036s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_product AS "Favourite_id_product", "Favourite".id_user AS "Favourite_id_user", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00035s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00031s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_product AS "Review_id_product", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00036s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_product AS "Order_id_product", "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00039s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Product".id) AS count_1 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[cached since 5.66s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" ORDER BY "Product".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 5.658s ago] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".title_product, "Product".price_product, "Product".quantity_product, "Product".explanation_product, "Product".article_product, "Product".tags, "Product".other_data, "Product".photo_product, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" 
WHERE "Product".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 4.878s ago] (19,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_product AS "Favourite_id_product", "Favourite".id_user AS "Favourite_id_user", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 4.876s ago] (19,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 4.874s ago] (19,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_product AS "Review_id_product", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 4.872s ago] (19,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_product AS "Order_id_product", "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 4.87s ago] (19,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Category".id) AS count_1 
FROM "Category"
INFO:sqlalchemy.engine.Engine:[cached since 53.25s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category" ORDER BY "Category".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 53.25s ago] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category" 
WHERE "Category".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 62.99s ago] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_category IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 62.98s ago] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category" 
WHERE "Category".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00028s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_category IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00035s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category" 
WHERE "Category".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 6.371s ago] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_category IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 6.366s ago] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product, "Productcategory".id_category, "Productcategory".id 
FROM "Productcategory"
INFO:sqlalchemy.engine.Engine:[generated in 0.00026s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category" 
WHERE "Category".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 10.83s ago] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_category IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 10.82s ago] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_product, "Productcategory".id_category, "Productcategory".id 
FROM "Productcategory"
INFO:sqlalchemy.engine.Engine:[cached since 4.459s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category" 
WHERE "Category".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 10.84s ago] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_category IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 10.83s ago] (1,)
INFO:src.api.authentication.hash_service.hashing:Хеширование изображения
INFO:root:Image Saver (Admin Panel) сохранение фотографии в директории
INFO:sqlalchemy.engine.Engine:UPDATE "Category" SET icon_category=$1::VARCHAR WHERE "Category".id = $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00025s] ('$2qXNEFNGn1v__pngwing.com.png', 1)
INFO:sqlalchemy.engine.Engine:COMMIT
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Category".id) AS count_1 
FROM "Category"
INFO:sqlalchemy.engine.Engine:[generated in 0.00020s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category" ORDER BY "Category".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00035s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category" 
WHERE "Category".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 13.46s ago] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Productcategory".id_category AS "Productcategory_id_category", "Productcategory".id_product AS "Productcategory_id_product", "Productcategory".id AS "Productcategory_id" 
FROM "Productcategory" 
WHERE "Productcategory".id_category IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 13.45s ago] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Category".id) AS count_1 
FROM "Category"
INFO:sqlalchemy.engine.Engine:[cached since 17.58s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category" ORDER BY "Category".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 17.58s ago] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Category".id) AS count_1 
FROM "Category"
INFO:sqlalchemy.engine.Engine:[generated in 0.00025s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category" ORDER BY "Category".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00033s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Category".id) AS count_1 
FROM "Category"
INFO:sqlalchemy.engine.Engine:[cached since 1.258s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category" ORDER BY "Category".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 1.255s ago] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Admin".id) AS count_1 
FROM "Admin"
INFO:sqlalchemy.engine.Engine:[generated in 0.00015s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Admin".email_admin, "Admin".password_user, "Admin".date_create, "Admin".date_update, "Admin".id 
FROM "Admin" ORDER BY "Admin".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00020s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("User".id) AS count_1 
FROM "User"
INFO:sqlalchemy.engine.Engine:[generated in 0.00018s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "User".email_user, "User".password_user, "User".secret_update_key, "User".name_user, "User".surname_user, "User".main_name_user, "User".date_registration, "User".date_update, "User".name_user_address, "User".surname_user_address, "User".name_company_address, "User".country_address, "User".address_street, "User".address_rl_et_home, "User".address_locality, "User".address_area, "User".address_index, "User".address_phone_number, "User".id 
FROM "User" ORDER BY "User".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00022s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Historybuy".id) AS count_1 
FROM "Historybuy"
INFO:sqlalchemy.engine.Engine:[generated in 0.00020s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Historybuy".id_user, "Historybuy".id_product, "Historybuy".id 
FROM "Historybuy" ORDER BY "Historybuy".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00021s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Favourite".id) AS count_1 
FROM "Favourite"
INFO:sqlalchemy.engine.Engine:[generated in 0.00015s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_user, "Favourite".id_product, "Favourite".id 
FROM "Favourite" ORDER BY "Favourite".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00025s] (10, 0)
INFO:sqlalchemy.engine.Engine:SELECT "Product".id AS "Product_id", "Product".title_product AS "Product_title_product", "Product".price_product AS "Product_price_product", "Product".quantity_product AS "Product_quantity_product", "Product".explanation_product AS "Product_explanation_product", "Product".article_product AS "Product_article_product", "Product".tags AS "Product_tags", "Product".other_data AS "Product_other_data", "Product".photo_product AS "Product_photo_product", "Product".date_create_product AS "Product_date_create_product", "Product".date_update_information AS "Product_date_update_information", "Product".product_discount AS "Product_product_discount" 
FROM "Product" 
WHERE "Product".id IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00027s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "User".id AS "User_id", "User".email_user AS "User_email_user", "User".password_user AS "User_password_user", "User".secret_update_key AS "User_secret_update_key", "User".name_user AS "User_name_user", "User".surname_user AS "User_surname_user", "User".main_name_user AS "User_main_name_user", "User".date_registration AS "User_date_registration", "User".date_update AS "User_date_update", "User".name_user_address AS "User_name_user_address", "User".surname_user_address AS "User_surname_user_address", "User".name_company_address AS "User_name_company_address", "User".country_address AS "User_country_address", "User".address_street AS "User_address_street", "User".address_rl_et_home AS "User_address_rl_et_home", "User".address_locality AS "User_address_locality", "User".address_area AS "User_address_area", "User".address_index AS "User_address_index", "User".address_phone_number AS "User_address_phone_number" 
FROM "User" 
WHERE "User".id IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00031s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Typeworker".id) AS count_1 
FROM "Typeworker"
INFO:sqlalchemy.engine.Engine:[generated in 0.00013s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Typeworker".name_type, "Typeworker".id 
FROM "Typeworker" ORDER BY "Typeworker".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00033s] (10, 0)
INFO:sqlalchemy.engine.Engine:SELECT "Vacancies".id_type_worker AS "Vacancies_id_type_worker", "Vacancies".salary_employee AS "Vacancies_salary_employee", "Vacancies".description_vacancies AS "Vacancies_description_vacancies", "Vacancies".id AS "Vacancies_id" 
FROM "Vacancies" 
WHERE "Vacancies".id_type_worker IN ($1::INTEGER, $2::INTEGER, $3::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00033s] (1, 2, 4)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Vacancies".id) AS count_1 
FROM "Vacancies"
INFO:sqlalchemy.engine.Engine:[generated in 0.00018s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Vacancies".salary_employee, "Vacancies".description_vacancies, "Vacancies".id_type_worker, "Vacancies".id 
FROM "Vacancies" ORDER BY "Vacancies".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00019s] (10, 0)
INFO:sqlalchemy.engine.Engine:SELECT "Typeworker".id AS "Typeworker_id", "Typeworker".name_type AS "Typeworker_name_type" 
FROM "Typeworker" 
WHERE "Typeworker".id IN ($1::INTEGER, $2::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00024s] (1, 4)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Order".id) AS count_1 
FROM "Order"
INFO:sqlalchemy.engine.Engine:[generated in 0.00030s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Order".date_buy, "Order".id_user, "Order".id_product, "Order".id 
FROM "Order" ORDER BY "Order".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00024s] (10, 0)
INFO:sqlalchemy.engine.Engine:SELECT "Product".id AS "Product_id", "Product".title_product AS "Product_title_product", "Product".price_product AS "Product_price_product", "Product".quantity_product AS "Product_quantity_product", "Product".explanation_product AS "Product_explanation_product", "Product".article_product AS "Product_article_product", "Product".tags AS "Product_tags", "Product".other_data AS "Product_other_data", "Product".photo_product AS "Product_photo_product", "Product".date_create_product AS "Product_date_create_product", "Product".date_update_information AS "Product_date_update_information", "Product".product_discount AS "Product_product_discount" 
FROM "Product" 
WHERE "Product".id IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00033s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "User".id AS "User_id", "User".email_user AS "User_email_user", "User".password_user AS "User_password_user", "User".secret_update_key AS "User_secret_update_key", "User".name_user AS "User_name_user", "User".surname_user AS "User_surname_user", "User".main_name_user AS "User_main_name_user", "User".date_registration AS "User_date_registration", "User".date_update AS "User_date_update", "User".name_user_address AS "User_name_user_address", "User".surname_user_address AS "User_surname_user_address", "User".name_company_address AS "User_name_company_address", "User".country_address AS "User_country_address", "User".address_street AS "User_address_street", "User".address_rl_et_home AS "User_address_rl_et_home", "User".address_locality AS "User_address_locality", "User".address_area AS "User_address_area", "User".address_index AS "User_address_index", "User".address_phone_number AS "User_address_phone_number" 
FROM "User" 
WHERE "User".id IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00065s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:root:CategoryService Получение иконки категории
INFO:src.database.repository.general_repository:DeclarativeAttributeIntercept Получение записи по ключу = 1
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category" 
WHERE "Category".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00050s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:root:CategoryService Получение иконки категории
INFO:src.database.repository.general_repository:DeclarativeAttributeIntercept Получение записи по ключу = 1
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category" 
WHERE "Category".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00031s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:root:CategoryService Получение иконки категории
INFO:src.database.repository.general_repository:DeclarativeAttributeIntercept Получение записи по ключу = 1
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category" 
WHERE "Category".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00031s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:root:CategoryService Получение иконки категории
INFO:src.database.repository.general_repository:DeclarativeAttributeIntercept Получение записи по ключу = 1
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category" 
WHERE "Category".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00049s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - проверка прав пользователя (на администратора), email=darkfos@gmail.com
INFO:src.api.authentication.hash_service.hashing:Хеширование пароля
INFO:src.database.repository.admin_repository:AdminRepository Запрос на получение данных по почте и паролю email=darkfos@gmail.com; password=$2b$12$Np9oAYrJU5h0zjgjfxRE/Oabymo4NgyMYKtnUSpmkqTSY7GR/vHY.
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Admin".email_admin, "Admin".password_user, "Admin".date_create, "Admin".date_update, "Admin".id 
FROM "Admin" 
WHERE "Admin".email_admin = $1::VARCHAR
INFO:sqlalchemy.engine.Engine:[generated in 0.00036s] ('darkfos@gmail.com',)
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Review".id) AS count_1 
FROM "Review"
INFO:sqlalchemy.engine.Engine:[generated in 0.00034s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Review".text_review, "Review".estimation_review, "Review".id_user, "Review".id_product, "Review".id 
FROM "Review" ORDER BY "Review".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00037s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Product".id) AS count_1 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[generated in 0.00013s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".article_product, "Product".title_product, "Product".brand, "Product".weight_product, "Product".id_category, "Product".id_subcategory_thirst_level, "Product".id_subcategory_second_level, "Product".explanation_product, "Product".brand_mark, "Product".model, "Product".photo_product, "Product".quantity_product, "Product".price_product, "Product".price_with_discount, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" ORDER BY "Product".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00034s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Subcategory".id) AS count_1 
FROM "Subcategory"
INFO:sqlalchemy.engine.Engine:[generated in 0.00012s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory" ORDER BY "Subcategory".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00050s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category"
INFO:sqlalchemy.engine.Engine:[generated in 0.00029s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".article_product, "Product".title_product, "Product".brand, "Product".weight_product, "Product".id_category, "Product".id_subcategory_thirst_level, "Product".id_subcategory_second_level, "Product".explanation_product, "Product".brand_mark, "Product".model, "Product".photo_product, "Product".quantity_product, "Product".price_product, "Product".price_with_discount, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[generated in 0.00022s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".article_product, "Product".title_product, "Product".brand, "Product".weight_product, "Product".id_category, "Product".id_subcategory_thirst_level, "Product".id_subcategory_second_level, "Product".explanation_product, "Product".brand_mark, "Product".model, "Product".photo_product, "Product".quantity_product, "Product".price_product, "Product".price_with_discount, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[cached since 0.004218s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Category".id) AS count_1 
FROM "Category"
INFO:sqlalchemy.engine.Engine:[generated in 0.00045s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category" ORDER BY "Category".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00041s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory"
INFO:sqlalchemy.engine.Engine:[generated in 0.00015s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".article_product, "Product".title_product, "Product".brand, "Product".weight_product, "Product".id_category, "Product".id_subcategory_thirst_level, "Product".id_subcategory_second_level, "Product".explanation_product, "Product".brand_mark, "Product".model, "Product".photo_product, "Product".quantity_product, "Product".price_product, "Product".price_with_discount, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[cached since 14.58s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory"
INFO:sqlalchemy.engine.Engine:[cached since 4.966s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".article_product, "Product".title_product, "Product".brand, "Product".weight_product, "Product".id_category, "Product".id_subcategory_thirst_level, "Product".id_subcategory_second_level, "Product".explanation_product, "Product".brand_mark, "Product".model, "Product".photo_product, "Product".quantity_product, "Product".price_product, "Product".price_with_discount, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[cached since 19.55s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
ERROR:sqladmin.application:Не удалось создать, изменить запись
Traceback (most recent call last):
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqladmin/application.py", line 535, in create
    obj = await model_view.insert_model(request, form_data_dict)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqladmin/models.py", line 1003, in insert_model
    return await Query(self).insert(data, request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqladmin/_queries.py", line 226, in insert
    return await self._insert_async(data, request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqladmin/_queries.py", line 211, in _insert_async
    await self.model_view.on_model_change(data, obj, True, request)
  File "/home/rias/Рабочий стол/ScooterProject/Scooter24_2/ScooterBackend/src/admin/models/category_admin_model.py", line 49, in on_model_change
    raise SQLAdminException("Не удалось создать, изменить запись")
sqladmin.exceptions.SQLAdminException: Не удалось создать, изменить запись
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory"
INFO:sqlalchemy.engine.Engine:[cached since 12.46s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".article_product, "Product".title_product, "Product".brand, "Product".weight_product, "Product".id_category, "Product".id_subcategory_thirst_level, "Product".id_subcategory_second_level, "Product".explanation_product, "Product".brand_mark, "Product".model, "Product".photo_product, "Product".quantity_product, "Product".price_product, "Product".price_with_discount, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[cached since 27.04s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.hash_service.hashing:Хеширование изображения
INFO:root:Image Saver (Admin Panel) сохранение фотографии в директории
ERROR:root:Image Saver Не удалось сохранить файл
Traceback (most recent call last):
  File "/home/rias/Рабочий стол/ScooterProject/Scooter24_2/ScooterBackend/src/other/image/image_saver.py", line 34, in save_file
    with open(
         ^^^^^
FileNotFoundError: [Errno 2] No such file or directory: 'src/static/images/$2OCHrB6b/CN__3418816.jpg'
ERROR:sqladmin.application:Не удалось создать, изменить запись
Traceback (most recent call last):
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqladmin/application.py", line 535, in create
    obj = await model_view.insert_model(request, form_data_dict)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqladmin/models.py", line 1003, in insert_model
    return await Query(self).insert(data, request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqladmin/_queries.py", line 226, in insert
    return await self._insert_async(data, request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqladmin/_queries.py", line 211, in _insert_async
    await self.model_view.on_model_change(data, obj, True, request)
  File "/home/rias/Рабочий стол/ScooterProject/Scooter24_2/ScooterBackend/src/admin/models/category_admin_model.py", line 49, in on_model_change
    raise SQLAdminException("Не удалось создать, изменить запись")
sqladmin.exceptions.SQLAdminException: Не удалось создать, изменить запись
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory"
INFO:sqlalchemy.engine.Engine:[cached since 19.88s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".article_product, "Product".title_product, "Product".brand, "Product".weight_product, "Product".id_category, "Product".id_subcategory_thirst_level, "Product".id_subcategory_second_level, "Product".explanation_product, "Product".brand_mark, "Product".model, "Product".photo_product, "Product".quantity_product, "Product".price_product, "Product".price_with_discount, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[cached since 34.46s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.hash_service.hashing:Хеширование изображения
INFO:root:Image Saver (Admin Panel) сохранение фотографии в директории
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:INSERT INTO "Category" (name_category, icon_category) VALUES ($1::VARCHAR, $2::VARCHAR) RETURNING "Category".id
INFO:sqlalchemy.engine.Engine:[generated in 0.00032s] ('Запчасть', '$2BwQX8FEBuF__dbeaver.png')
INFO:sqlalchemy.engine.Engine:COMMIT
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Category".id) AS count_1 
FROM "Category"
INFO:sqlalchemy.engine.Engine:[cached since 21.82s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category" ORDER BY "Category".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 21.81s ago] (10, 0)
ERROR:sqlalchemy.pool.impl.AsyncAdaptedQueuePool:The garbage collector is trying to clean up non-checked-in connection <AdaptedConnection <asyncpg.connection.Connection object at 0x7b694690e3f0>>, which will be terminated.  Please ensure that SQLAlchemy pooled connections are returned to the pool explicitly, either by calling ``close()`` or by using appropriate context managers to manage their lifecycle.
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".id_category AS "Subcategory_id_category", "Subcategory".name AS "Subcategory_name", "Subcategory".level AS "Subcategory_level", "Subcategory".id_sub_category AS "Subcategory_id_sub_category", "Subcategory".id AS "Subcategory_id" 
FROM "Subcategory" 
WHERE "Subcategory".id_category IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00083s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Product".id_category AS "Product_id_category", "Product".article_product AS "Product_article_product", "Product".title_product AS "Product_title_product", "Product".brand AS "Product_brand", "Product".weight_product AS "Product_weight_product", "Product".id_subcategory_thirst_level AS "Product_id_subcategory_thirst_level", "Product".id_subcategory_second_level AS "Product_id_subcategory_second_level", "Product".explanation_product AS "Product_explanation_product", "Product".brand_mark AS "Product_brand_mark", "Product".model AS "Product_model", "Product".photo_product AS "Product_photo_product", "Product".quantity_product AS "Product_quantity_product", "Product".price_product AS "Product_price_product", "Product".price_with_discount AS "Product_price_with_discount", "Product".date_create_product AS "Product_date_create_product", "Product".date_update_information AS "Product_date_update_information", "Product".product_discount AS "Product_product_discount", "Product".id AS "Product_id" 
FROM "Product" 
WHERE "Product".id_category IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00077s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category" 
WHERE "Category".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00031s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".id_category AS "Subcategory_id_category", "Subcategory".name AS "Subcategory_name", "Subcategory".level AS "Subcategory_level", "Subcategory".id_sub_category AS "Subcategory_id_sub_category", "Subcategory".id AS "Subcategory_id" 
FROM "Subcategory" 
WHERE "Subcategory".id_category IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 3.909s ago] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Product".id_category AS "Product_id_category", "Product".article_product AS "Product_article_product", "Product".title_product AS "Product_title_product", "Product".brand AS "Product_brand", "Product".weight_product AS "Product_weight_product", "Product".id_subcategory_thirst_level AS "Product_id_subcategory_thirst_level", "Product".id_subcategory_second_level AS "Product_id_subcategory_second_level", "Product".explanation_product AS "Product_explanation_product", "Product".brand_mark AS "Product_brand_mark", "Product".model AS "Product_model", "Product".photo_product AS "Product_photo_product", "Product".quantity_product AS "Product_quantity_product", "Product".price_product AS "Product_price_product", "Product".price_with_discount AS "Product_price_with_discount", "Product".date_create_product AS "Product_date_create_product", "Product".date_update_information AS "Product_date_update_information", "Product".product_discount AS "Product_product_discount", "Product".id AS "Product_id" 
FROM "Product" 
WHERE "Product".id_category IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 3.907s ago] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Subcategory".id) AS count_1 
FROM "Subcategory"
INFO:sqlalchemy.engine.Engine:[cached since 44.75s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory" ORDER BY "Subcategory".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 44.75s ago] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category"
INFO:sqlalchemy.engine.Engine:[cached since 43.31s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".article_product, "Product".title_product, "Product".brand, "Product".weight_product, "Product".id_category, "Product".id_subcategory_thirst_level, "Product".id_subcategory_second_level, "Product".explanation_product, "Product".brand_mark, "Product".model, "Product".photo_product, "Product".quantity_product, "Product".price_product, "Product".price_with_discount, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[cached since 43.31s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".article_product, "Product".title_product, "Product".brand, "Product".weight_product, "Product".id_category, "Product".id_subcategory_thirst_level, "Product".id_subcategory_second_level, "Product".explanation_product, "Product".brand_mark, "Product".model, "Product".photo_product, "Product".quantity_product, "Product".price_product, "Product".price_with_discount, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[cached since 43.31s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Subcategory".id) AS count_1 
FROM "Subcategory"
INFO:sqlalchemy.engine.Engine:[cached since 60.3s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory" ORDER BY "Subcategory".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 60.31s ago] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category"
INFO:sqlalchemy.engine.Engine:[cached since 59.06s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".article_product, "Product".title_product, "Product".brand, "Product".weight_product, "Product".id_category, "Product".id_subcategory_thirst_level, "Product".id_subcategory_second_level, "Product".explanation_product, "Product".brand_mark, "Product".model, "Product".photo_product, "Product".quantity_product, "Product".price_product, "Product".price_with_discount, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[cached since 59.06s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".article_product, "Product".title_product, "Product".brand, "Product".weight_product, "Product".id_category, "Product".id_subcategory_thirst_level, "Product".id_subcategory_second_level, "Product".explanation_product, "Product".brand_mark, "Product".model, "Product".photo_product, "Product".quantity_product, "Product".price_product, "Product".price_with_discount, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[cached since 59.06s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category"
INFO:sqlalchemy.engine.Engine:[cached since 72.4s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".article_product, "Product".title_product, "Product".brand, "Product".weight_product, "Product".id_category, "Product".id_subcategory_thirst_level, "Product".id_subcategory_second_level, "Product".explanation_product, "Product".brand_mark, "Product".model, "Product".photo_product, "Product".quantity_product, "Product".price_product, "Product".price_with_discount, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[cached since 72.4s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".article_product, "Product".title_product, "Product".brand, "Product".weight_product, "Product".id_category, "Product".id_subcategory_thirst_level, "Product".id_subcategory_second_level, "Product".explanation_product, "Product".brand_mark, "Product".model, "Product".photo_product, "Product".quantity_product, "Product".price_product, "Product".price_with_discount, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[cached since 72.41s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:INSERT INTO "Subcategory" (name, level, id_category, id_sub_category) VALUES ($1::VARCHAR, $2::INTEGER, $3::INTEGER, $4::INTEGER) RETURNING "Subcategory".id
INFO:sqlalchemy.engine.Engine:[generated in 0.00050s] ('Двигатель', 1, 1, None)
INFO:sqlalchemy.engine.Engine:ROLLBACK
ERROR:sqladmin.application:(sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.NotNullViolationError'>: null value in column "id_sub_category" of relation "Subcategory" violates not-null constraint
DETAIL:  Failing row contains (Двигатель, 1, 1, null, 1).
[SQL: INSERT INTO "Subcategory" (name, level, id_category, id_sub_category) VALUES ($1::VARCHAR, $2::INTEGER, $3::INTEGER, $4::INTEGER) RETURNING "Subcategory".id]
[parameters: ('Двигатель', 1, 1, None)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
Traceback (most recent call last):
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 538, in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/asyncpg/prepared_stmt.py", line 176, in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/asyncpg/prepared_stmt.py", line 241, in __bind_execute
    data, status, _ = await self.__do_execute(
                      ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/asyncpg/prepared_stmt.py", line 230, in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "asyncpg/protocol/protocol.pyx", line 207, in bind_execute
asyncpg.exceptions.NotNullViolationError: null value in column "id_sub_category" of relation "Subcategory" violates not-null constraint
DETAIL:  Failing row contains (Двигатель, 1, 1, null, 1).

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/engine/base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/engine/default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 572, in execute
    self._adapt_connection.await_(
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 550, in _prepare_and_execute
    self._handle_exception(error)
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 501, in _handle_exception
    self._adapt_connection._handle_exception(error)
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 784, in _handle_exception
    raise translated_error from error
sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_dbapi.IntegrityError: <class 'asyncpg.exceptions.NotNullViolationError'>: null value in column "id_sub_category" of relation "Subcategory" violates not-null constraint
DETAIL:  Failing row contains (Двигатель, 1, 1, null, 1).

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqladmin/application.py", line 535, in create
    obj = await model_view.insert_model(request, form_data_dict)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqladmin/models.py", line 1003, in insert_model
    return await Query(self).insert(data, request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqladmin/_queries.py", line 226, in insert
    return await self._insert_async(data, request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqladmin/_queries.py", line 214, in _insert_async
    await session.commit()
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py", line 1009, in commit
    await greenlet_spawn(self.sync_session.commit)
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 203, in greenlet_spawn
    result = context.switch(value)
             ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 2028, in commit
    trans.commit(_to_root=True)
  File "<string>", line 2, in commit
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/orm/state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1313, in commit
    self._prepare_impl()
  File "<string>", line 2, in _prepare_impl
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/orm/state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1288, in _prepare_impl
    self.session.flush()
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 4352, in flush
    self._flush(objects)
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 4487, in _flush
    with util.safe_reraise():
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 4448, in _flush
    flush_context.execute()
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/orm/unitofwork.py", line 466, in execute
    rec.execute(self)
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/orm/unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/orm/persistence.py", line 93, in save_obj
    _emit_insert_statements(
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/orm/persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
             ^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/engine/base.py", line 1418, in execute
    return meth(
           ^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/sql/elements.py", line 515, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/engine/base.py", line 1640, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/engine/base.py", line 1846, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/engine/base.py", line 1986, in _exec_single_context
    self._handle_dbapi_exception(
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/engine/base.py", line 2355, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/engine/base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/engine/default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 572, in execute
    self._adapt_connection.await_(
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 550, in _prepare_and_execute
    self._handle_exception(error)
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 501, in _handle_exception
    self._adapt_connection._handle_exception(error)
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 784, in _handle_exception
    raise translated_error from error
sqlalchemy.exc.IntegrityError: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.NotNullViolationError'>: null value in column "id_sub_category" of relation "Subcategory" violates not-null constraint
DETAIL:  Failing row contains (Двигатель, 1, 1, null, 1).
[SQL: INSERT INTO "Subcategory" (name, level, id_category, id_sub_category) VALUES ($1::VARCHAR, $2::INTEGER, $3::INTEGER, $4::INTEGER) RETURNING "Subcategory".id]
[parameters: ('Двигатель', 1, 1, None)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category"
INFO:sqlalchemy.engine.Engine:[generated in 0.00042s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".article_product, "Product".title_product, "Product".brand, "Product".weight_product, "Product".id_category, "Product".id_subcategory_thirst_level, "Product".id_subcategory_second_level, "Product".explanation_product, "Product".brand_mark, "Product".model, "Product".photo_product, "Product".quantity_product, "Product".price_product, "Product".price_with_discount, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[generated in 0.00041s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".article_product, "Product".title_product, "Product".brand, "Product".weight_product, "Product".id_category, "Product".id_subcategory_thirst_level, "Product".id_subcategory_second_level, "Product".explanation_product, "Product".brand_mark, "Product".model, "Product".photo_product, "Product".quantity_product, "Product".price_product, "Product".price_with_discount, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[cached since 0.01049s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:INSERT INTO "Subcategory" (name, level, id_category, id_sub_category) VALUES ($1::VARCHAR, $2::INTEGER, $3::INTEGER, $4::INTEGER) RETURNING "Subcategory".id
INFO:sqlalchemy.engine.Engine:[generated in 0.00029s] ('Двигатель', 1, 1, None)
INFO:sqlalchemy.engine.Engine:COMMIT
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Subcategory".id) AS count_1 
FROM "Subcategory"
INFO:sqlalchemy.engine.Engine:[generated in 0.00021s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory" ORDER BY "Subcategory".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00076s] (10, 0)
INFO:sqlalchemy.engine.Engine:SELECT "Product".id_subcategory_thirst_level AS "Product_id_subcategory_thirst_level", "Product".article_product AS "Product_article_product", "Product".title_product AS "Product_title_product", "Product".brand AS "Product_brand", "Product".weight_product AS "Product_weight_product", "Product".id_category AS "Product_id_category", "Product".id_subcategory_second_level AS "Product_id_subcategory_second_level", "Product".explanation_product AS "Product_explanation_product", "Product".brand_mark AS "Product_brand_mark", "Product".model AS "Product_model", "Product".photo_product AS "Product_photo_product", "Product".quantity_product AS "Product_quantity_product", "Product".price_product AS "Product_price_product", "Product".price_with_discount AS "Product_price_with_discount", "Product".date_create_product AS "Product_date_create_product", "Product".date_update_information AS "Product_date_update_information", "Product".product_discount AS "Product_product_discount", "Product".id AS "Product_id" 
FROM "Product" 
WHERE "Product".id_subcategory_thirst_level IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00060s] (2,)
INFO:sqlalchemy.engine.Engine:SELECT "Category".id AS "Category_id", "Category".name_category AS "Category_name_category", "Category".icon_category AS "Category_icon_category" 
FROM "Category" 
WHERE "Category".id IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00057s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Product".id_subcategory_second_level AS "Product_id_subcategory_second_level", "Product".article_product AS "Product_article_product", "Product".title_product AS "Product_title_product", "Product".brand AS "Product_brand", "Product".weight_product AS "Product_weight_product", "Product".id_category AS "Product_id_category", "Product".id_subcategory_thirst_level AS "Product_id_subcategory_thirst_level", "Product".explanation_product AS "Product_explanation_product", "Product".brand_mark AS "Product_brand_mark", "Product".model AS "Product_model", "Product".photo_product AS "Product_photo_product", "Product".quantity_product AS "Product_quantity_product", "Product".price_product AS "Product_price_product", "Product".price_with_discount AS "Product_price_with_discount", "Product".date_create_product AS "Product_date_create_product", "Product".date_update_information AS "Product_date_update_information", "Product".product_discount AS "Product_product_discount", "Product".id AS "Product_id" 
FROM "Product" 
WHERE "Product".id_subcategory_second_level IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00040s] (2,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory" 
WHERE "Subcategory".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00027s] (2,)
INFO:sqlalchemy.engine.Engine:SELECT "Product".id_subcategory_thirst_level AS "Product_id_subcategory_thirst_level", "Product".article_product AS "Product_article_product", "Product".title_product AS "Product_title_product", "Product".brand AS "Product_brand", "Product".weight_product AS "Product_weight_product", "Product".id_category AS "Product_id_category", "Product".id_subcategory_second_level AS "Product_id_subcategory_second_level", "Product".explanation_product AS "Product_explanation_product", "Product".brand_mark AS "Product_brand_mark", "Product".model AS "Product_model", "Product".photo_product AS "Product_photo_product", "Product".quantity_product AS "Product_quantity_product", "Product".price_product AS "Product_price_product", "Product".price_with_discount AS "Product_price_with_discount", "Product".date_create_product AS "Product_date_create_product", "Product".date_update_information AS "Product_date_update_information", "Product".product_discount AS "Product_product_discount", "Product".id AS "Product_id" 
FROM "Product" 
WHERE "Product".id_subcategory_thirst_level IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00032s] (2,)
INFO:sqlalchemy.engine.Engine:SELECT "Category".id AS "Category_id", "Category".name_category AS "Category_name_category", "Category".icon_category AS "Category_icon_category" 
FROM "Category" 
WHERE "Category".id IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00042s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Product".id_subcategory_second_level AS "Product_id_subcategory_second_level", "Product".article_product AS "Product_article_product", "Product".title_product AS "Product_title_product", "Product".brand AS "Product_brand", "Product".weight_product AS "Product_weight_product", "Product".id_category AS "Product_id_category", "Product".id_subcategory_thirst_level AS "Product_id_subcategory_thirst_level", "Product".explanation_product AS "Product_explanation_product", "Product".brand_mark AS "Product_brand_mark", "Product".model AS "Product_model", "Product".photo_product AS "Product_photo_product", "Product".quantity_product AS "Product_quantity_product", "Product".price_product AS "Product_price_product", "Product".price_with_discount AS "Product_price_with_discount", "Product".date_create_product AS "Product_date_create_product", "Product".date_update_information AS "Product_date_update_information", "Product".product_discount AS "Product_product_discount", "Product".id AS "Product_id" 
FROM "Product" 
WHERE "Product".id_subcategory_second_level IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00039s] (2,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Category".id) AS count_1 
FROM "Category"
INFO:sqlalchemy.engine.Engine:[generated in 0.00018s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category" ORDER BY "Category".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00035s] (10, 0)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".id_category AS "Subcategory_id_category", "Subcategory".name AS "Subcategory_name", "Subcategory".level AS "Subcategory_level", "Subcategory".id_sub_category AS "Subcategory_id_sub_category", "Subcategory".id AS "Subcategory_id" 
FROM "Subcategory" 
WHERE "Subcategory".id_category IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00042s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Product".id_category AS "Product_id_category", "Product".article_product AS "Product_article_product", "Product".title_product AS "Product_title_product", "Product".brand AS "Product_brand", "Product".weight_product AS "Product_weight_product", "Product".id_subcategory_thirst_level AS "Product_id_subcategory_thirst_level", "Product".id_subcategory_second_level AS "Product_id_subcategory_second_level", "Product".explanation_product AS "Product_explanation_product", "Product".brand_mark AS "Product_brand_mark", "Product".model AS "Product_model", "Product".photo_product AS "Product_photo_product", "Product".quantity_product AS "Product_quantity_product", "Product".price_product AS "Product_price_product", "Product".price_with_discount AS "Product_price_with_discount", "Product".date_create_product AS "Product_date_create_product", "Product".date_update_information AS "Product_date_update_information", "Product".product_discount AS "Product_product_discount", "Product".id AS "Product_id" 
FROM "Product" 
WHERE "Product".id_category IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00089s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category" 
WHERE "Category".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00054s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".id_category AS "Subcategory_id_category", "Subcategory".name AS "Subcategory_name", "Subcategory".level AS "Subcategory_level", "Subcategory".id_sub_category AS "Subcategory_id_sub_category", "Subcategory".id AS "Subcategory_id" 
FROM "Subcategory" 
WHERE "Subcategory".id_category IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 20.23s ago] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Product".id_category AS "Product_id_category", "Product".article_product AS "Product_article_product", "Product".title_product AS "Product_title_product", "Product".brand AS "Product_brand", "Product".weight_product AS "Product_weight_product", "Product".id_subcategory_thirst_level AS "Product_id_subcategory_thirst_level", "Product".id_subcategory_second_level AS "Product_id_subcategory_second_level", "Product".explanation_product AS "Product_explanation_product", "Product".brand_mark AS "Product_brand_mark", "Product".model AS "Product_model", "Product".photo_product AS "Product_photo_product", "Product".quantity_product AS "Product_quantity_product", "Product".price_product AS "Product_price_product", "Product".price_with_discount AS "Product_price_with_discount", "Product".date_create_product AS "Product_date_create_product", "Product".date_update_information AS "Product_date_update_information", "Product".product_discount AS "Product_product_discount", "Product".id AS "Product_id" 
FROM "Product" 
WHERE "Product".id_category IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 20.22s ago] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Subcategory".id) AS count_1 
FROM "Subcategory"
INFO:sqlalchemy.engine.Engine:[cached since 40.95s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory" ORDER BY "Subcategory".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 40.94s ago] (10, 0)
INFO:sqlalchemy.engine.Engine:SELECT "Product".id_subcategory_thirst_level AS "Product_id_subcategory_thirst_level", "Product".article_product AS "Product_article_product", "Product".title_product AS "Product_title_product", "Product".brand AS "Product_brand", "Product".weight_product AS "Product_weight_product", "Product".id_category AS "Product_id_category", "Product".id_subcategory_second_level AS "Product_id_subcategory_second_level", "Product".explanation_product AS "Product_explanation_product", "Product".brand_mark AS "Product_brand_mark", "Product".model AS "Product_model", "Product".photo_product AS "Product_photo_product", "Product".quantity_product AS "Product_quantity_product", "Product".price_product AS "Product_price_product", "Product".price_with_discount AS "Product_price_with_discount", "Product".date_create_product AS "Product_date_create_product", "Product".date_update_information AS "Product_date_update_information", "Product".product_discount AS "Product_product_discount", "Product".id AS "Product_id" 
FROM "Product" 
WHERE "Product".id_subcategory_thirst_level IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 40.94s ago] (2,)
INFO:sqlalchemy.engine.Engine:SELECT "Category".id AS "Category_id", "Category".name_category AS "Category_name_category", "Category".icon_category AS "Category_icon_category" 
FROM "Category" 
WHERE "Category".id IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 40.93s ago] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Product".id_subcategory_second_level AS "Product_id_subcategory_second_level", "Product".article_product AS "Product_article_product", "Product".title_product AS "Product_title_product", "Product".brand AS "Product_brand", "Product".weight_product AS "Product_weight_product", "Product".id_category AS "Product_id_category", "Product".id_subcategory_thirst_level AS "Product_id_subcategory_thirst_level", "Product".explanation_product AS "Product_explanation_product", "Product".brand_mark AS "Product_brand_mark", "Product".model AS "Product_model", "Product".photo_product AS "Product_photo_product", "Product".quantity_product AS "Product_quantity_product", "Product".price_product AS "Product_price_product", "Product".price_with_discount AS "Product_price_with_discount", "Product".date_create_product AS "Product_date_create_product", "Product".date_update_information AS "Product_date_update_information", "Product".product_discount AS "Product_product_discount", "Product".id AS "Product_id" 
FROM "Product" 
WHERE "Product".id_subcategory_second_level IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 40.93s ago] (2,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory" 
WHERE "Subcategory".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 63.37s ago] (2,)
INFO:sqlalchemy.engine.Engine:SELECT "Product".id_subcategory_thirst_level AS "Product_id_subcategory_thirst_level", "Product".article_product AS "Product_article_product", "Product".title_product AS "Product_title_product", "Product".brand AS "Product_brand", "Product".weight_product AS "Product_weight_product", "Product".id_category AS "Product_id_category", "Product".id_subcategory_second_level AS "Product_id_subcategory_second_level", "Product".explanation_product AS "Product_explanation_product", "Product".brand_mark AS "Product_brand_mark", "Product".model AS "Product_model", "Product".photo_product AS "Product_photo_product", "Product".quantity_product AS "Product_quantity_product", "Product".price_product AS "Product_price_product", "Product".price_with_discount AS "Product_price_with_discount", "Product".date_create_product AS "Product_date_create_product", "Product".date_update_information AS "Product_date_update_information", "Product".product_discount AS "Product_product_discount", "Product".id AS "Product_id" 
FROM "Product" 
WHERE "Product".id_subcategory_thirst_level IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 63.37s ago] (2,)
INFO:sqlalchemy.engine.Engine:SELECT "Category".id AS "Category_id", "Category".name_category AS "Category_name_category", "Category".icon_category AS "Category_icon_category" 
FROM "Category" 
WHERE "Category".id IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 63.37s ago] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Product".id_subcategory_second_level AS "Product_id_subcategory_second_level", "Product".article_product AS "Product_article_product", "Product".title_product AS "Product_title_product", "Product".brand AS "Product_brand", "Product".weight_product AS "Product_weight_product", "Product".id_category AS "Product_id_category", "Product".id_subcategory_thirst_level AS "Product_id_subcategory_thirst_level", "Product".explanation_product AS "Product_explanation_product", "Product".brand_mark AS "Product_brand_mark", "Product".model AS "Product_model", "Product".photo_product AS "Product_photo_product", "Product".quantity_product AS "Product_quantity_product", "Product".price_product AS "Product_price_product", "Product".price_with_discount AS "Product_price_with_discount", "Product".date_create_product AS "Product_date_create_product", "Product".date_update_information AS "Product_date_update_information", "Product".product_discount AS "Product_product_discount", "Product".id AS "Product_id" 
FROM "Product" 
WHERE "Product".id_subcategory_second_level IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 63.37s ago] (2,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Product".id) AS count_1 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[generated in 0.00057s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".article_product, "Product".title_product, "Product".brand, "Product".weight_product, "Product".id_category, "Product".id_subcategory_thirst_level, "Product".id_subcategory_second_level, "Product".explanation_product, "Product".brand_mark, "Product".model, "Product".photo_product, "Product".quantity_product, "Product".price_product, "Product".price_with_discount, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" ORDER BY "Product".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00054s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category"
INFO:sqlalchemy.engine.Engine:[cached since 75.32s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory"
INFO:sqlalchemy.engine.Engine:[generated in 0.00104s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory"
INFO:sqlalchemy.engine.Engine:[cached since 0.006725s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category"
INFO:sqlalchemy.engine.Engine:[cached since 102.7s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory"
INFO:sqlalchemy.engine.Engine:[cached since 27.37s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory"
INFO:sqlalchemy.engine.Engine:[cached since 27.37s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.hash_service.hashing:Хеширование изображения
INFO:root:Image Saver (Admin Panel) сохранение фотографии в директории
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:INSERT INTO "Product" (article_product, title_product, brand, weight_product, id_category, id_subcategory_thirst_level, id_subcategory_second_level, explanation_product, brand_mark, model, photo_product, quantity_product, price_product, price_with_discount, date_create_product, date_update_information, product_discount) VALUES ($1::VARCHAR, $2::VARCHAR, $3::VARCHAR, $4::FLOAT, $5::INTEGER, $6::INTEGER, $7::INTEGER, $8::VARCHAR, $9::VARCHAR, $10::VARCHAR, $11::VARCHAR, $12::INTEGER, $13::FLOAT, $14::FLOAT, $15::DATE, $16::DATE, $17::INTEGER) RETURNING "Product".id
INFO:sqlalchemy.engine.Engine:[generated in 0.00028s] ('kdaskd;sakld;', 'TOP#!', None, 0.0, None, None, None, 'DESCRIPTION ON PRODUCT', None, None, '$2M4lfUaT6Rd__Волчий Дождь.jpeg', 909, Decimal('1000'), 0.0, datetime.date(2024, 9, 26), datetime.date(2024, 9, 26), 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
ERROR:sqladmin.application:(sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.NotNullViolationError'>: null value in column "brand" of relation "Product" violates not-null constraint
DETAIL:  Failing row contains (kdaskd;sakld;, TOP#!, null, 0, null, null, null, DESCRIPTION ON PRODUCT, null, null, $2M4lfUaT6Rd__Волчий Дождь.jpeg, 909, 1000, 0, 2024-09-26, 2024-09-26, 0, 1).
[SQL: INSERT INTO "Product" (article_product, title_product, brand, weight_product, id_category, id_subcategory_thirst_level, id_subcategory_second_level, explanation_product, brand_mark, model, photo_product, quantity_product, price_product, price_with_discount, date_create_product, date_update_information, product_discount) VALUES ($1::VARCHAR, $2::VARCHAR, $3::VARCHAR, $4::FLOAT, $5::INTEGER, $6::INTEGER, $7::INTEGER, $8::VARCHAR, $9::VARCHAR, $10::VARCHAR, $11::VARCHAR, $12::INTEGER, $13::FLOAT, $14::FLOAT, $15::DATE, $16::DATE, $17::INTEGER) RETURNING "Product".id]
[parameters: ('kdaskd;sakld;', 'TOP#!', None, 0.0, None, None, None, 'DESCRIPTION ON PRODUCT', None, None, '$2M4lfUaT6Rd__Волчий Дождь.jpeg', 909, Decimal('1000'), 0.0, datetime.date(2024, 9, 26), datetime.date(2024, 9, 26), 0)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
Traceback (most recent call last):
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 538, in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/asyncpg/prepared_stmt.py", line 176, in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/asyncpg/prepared_stmt.py", line 241, in __bind_execute
    data, status, _ = await self.__do_execute(
                      ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/asyncpg/prepared_stmt.py", line 230, in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "asyncpg/protocol/protocol.pyx", line 207, in bind_execute
asyncpg.exceptions.NotNullViolationError: null value in column "brand" of relation "Product" violates not-null constraint
DETAIL:  Failing row contains (kdaskd;sakld;, TOP#!, null, 0, null, null, null, DESCRIPTION ON PRODUCT, null, null, $2M4lfUaT6Rd__Волчий Дождь.jpeg, 909, 1000, 0, 2024-09-26, 2024-09-26, 0, 1).

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/engine/base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/engine/default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 572, in execute
    self._adapt_connection.await_(
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 550, in _prepare_and_execute
    self._handle_exception(error)
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 501, in _handle_exception
    self._adapt_connection._handle_exception(error)
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 784, in _handle_exception
    raise translated_error from error
sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_dbapi.IntegrityError: <class 'asyncpg.exceptions.NotNullViolationError'>: null value in column "brand" of relation "Product" violates not-null constraint
DETAIL:  Failing row contains (kdaskd;sakld;, TOP#!, null, 0, null, null, null, DESCRIPTION ON PRODUCT, null, null, $2M4lfUaT6Rd__Волчий Дождь.jpeg, 909, 1000, 0, 2024-09-26, 2024-09-26, 0, 1).

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqladmin/application.py", line 535, in create
    obj = await model_view.insert_model(request, form_data_dict)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqladmin/models.py", line 1003, in insert_model
    return await Query(self).insert(data, request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqladmin/_queries.py", line 226, in insert
    return await self._insert_async(data, request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqladmin/_queries.py", line 214, in _insert_async
    await session.commit()
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py", line 1009, in commit
    await greenlet_spawn(self.sync_session.commit)
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 203, in greenlet_spawn
    result = context.switch(value)
             ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 2028, in commit
    trans.commit(_to_root=True)
  File "<string>", line 2, in commit
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/orm/state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1313, in commit
    self._prepare_impl()
  File "<string>", line 2, in _prepare_impl
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/orm/state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1288, in _prepare_impl
    self.session.flush()
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 4352, in flush
    self._flush(objects)
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 4487, in _flush
    with util.safe_reraise():
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 4448, in _flush
    flush_context.execute()
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/orm/unitofwork.py", line 466, in execute
    rec.execute(self)
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/orm/unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/orm/persistence.py", line 93, in save_obj
    _emit_insert_statements(
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/orm/persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
             ^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/engine/base.py", line 1418, in execute
    return meth(
           ^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/sql/elements.py", line 515, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/engine/base.py", line 1640, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/engine/base.py", line 1846, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/engine/base.py", line 1986, in _exec_single_context
    self._handle_dbapi_exception(
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/engine/base.py", line 2355, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/engine/base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/engine/default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 572, in execute
    self._adapt_connection.await_(
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 550, in _prepare_and_execute
    self._handle_exception(error)
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 501, in _handle_exception
    self._adapt_connection._handle_exception(error)
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 784, in _handle_exception
    raise translated_error from error
sqlalchemy.exc.IntegrityError: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.NotNullViolationError'>: null value in column "brand" of relation "Product" violates not-null constraint
DETAIL:  Failing row contains (kdaskd;sakld;, TOP#!, null, 0, null, null, null, DESCRIPTION ON PRODUCT, null, null, $2M4lfUaT6Rd__Волчий Дождь.jpeg, 909, 1000, 0, 2024-09-26, 2024-09-26, 0, 1).
[SQL: INSERT INTO "Product" (article_product, title_product, brand, weight_product, id_category, id_subcategory_thirst_level, id_subcategory_second_level, explanation_product, brand_mark, model, photo_product, quantity_product, price_product, price_with_discount, date_create_product, date_update_information, product_discount) VALUES ($1::VARCHAR, $2::VARCHAR, $3::VARCHAR, $4::FLOAT, $5::INTEGER, $6::INTEGER, $7::INTEGER, $8::VARCHAR, $9::VARCHAR, $10::VARCHAR, $11::VARCHAR, $12::INTEGER, $13::FLOAT, $14::FLOAT, $15::DATE, $16::DATE, $17::INTEGER) RETURNING "Product".id]
[parameters: ('kdaskd;sakld;', 'TOP#!', None, 0.0, None, None, None, 'DESCRIPTION ON PRODUCT', None, None, '$2M4lfUaT6Rd__Волчий Дождь.jpeg', 909, Decimal('1000'), 0.0, datetime.date(2024, 9, 26), datetime.date(2024, 9, 26), 0)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Review".id) AS count_1 
FROM "Review"
INFO:sqlalchemy.engine.Engine:[generated in 0.00031s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Review".text_review, "Review".estimation_review, "Review".id_user, "Review".id_product, "Review".id 
FROM "Review" ORDER BY "Review".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00020s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Product".id) AS count_1 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[generated in 0.00020s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".article_product, "Product".title_product, "Product".brand, "Product".weight_product, "Product".id_category, "Product".id_subcategory_thirst_level, "Product".id_subcategory_second_level, "Product".explanation_product, "Product".brand_mark, "Product".model, "Product".photo_product, "Product".quantity_product, "Product".price_product, "Product".price_with_discount, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" ORDER BY "Product".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00022s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category"
INFO:sqlalchemy.engine.Engine:[generated in 0.00010s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory"
INFO:sqlalchemy.engine.Engine:[generated in 0.00011s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory"
INFO:sqlalchemy.engine.Engine:[cached since 0.002459s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("User".id) AS count_1 
FROM "User"
INFO:sqlalchemy.engine.Engine:[generated in 0.00018s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "User".email_user, "User".password_user, "User".secret_update_key, "User".name_user, "User".surname_user, "User".main_name_user, "User".date_registration, "User".date_update, "User".name_user_address, "User".surname_user_address, "User".name_company_address, "User".country_address, "User".address_street, "User".address_rl_et_home, "User".address_locality, "User".address_area, "User".address_index, "User".address_phone_number, "User".id 
FROM "User" ORDER BY "User".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00034s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Product".id) AS count_1 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[cached since 49.84s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".article_product, "Product".title_product, "Product".brand, "Product".weight_product, "Product".id_category, "Product".id_subcategory_thirst_level, "Product".id_subcategory_second_level, "Product".explanation_product, "Product".brand_mark, "Product".model, "Product".photo_product, "Product".quantity_product, "Product".price_product, "Product".price_with_discount, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" ORDER BY "Product".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 49.84s ago] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Product".id) AS count_1 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[generated in 0.00039s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".article_product, "Product".title_product, "Product".brand, "Product".weight_product, "Product".id_category, "Product".id_subcategory_thirst_level, "Product".id_subcategory_second_level, "Product".explanation_product, "Product".brand_mark, "Product".model, "Product".photo_product, "Product".quantity_product, "Product".price_product, "Product".price_with_discount, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" ORDER BY "Product".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00038s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category"
INFO:sqlalchemy.engine.Engine:[generated in 0.00017s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory"
INFO:sqlalchemy.engine.Engine:[generated in 0.00045s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory"
INFO:sqlalchemy.engine.Engine:[cached since 0.006388s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Product".id) AS count_1 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[cached since 83.35s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".article_product, "Product".title_product, "Product".brand, "Product".weight_product, "Product".id_category, "Product".id_subcategory_thirst_level, "Product".id_subcategory_second_level, "Product".explanation_product, "Product".brand_mark, "Product".model, "Product".photo_product, "Product".quantity_product, "Product".price_product, "Product".price_with_discount, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" ORDER BY "Product".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 83.33s ago] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category"
INFO:sqlalchemy.engine.Engine:[cached since 67.22s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory"
INFO:sqlalchemy.engine.Engine:[cached since 67.22s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory"
INFO:sqlalchemy.engine.Engine:[cached since 67.23s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category"
INFO:sqlalchemy.engine.Engine:[generated in 0.00065s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory"
INFO:sqlalchemy.engine.Engine:[generated in 0.00078s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory"
INFO:sqlalchemy.engine.Engine:[cached since 0.005649s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category"
INFO:sqlalchemy.engine.Engine:[cached since 0.9446s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory"
INFO:sqlalchemy.engine.Engine:[cached since 0.9386s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory"
INFO:sqlalchemy.engine.Engine:[cached since 0.9407s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Product".id) AS count_1 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[generated in 0.00061s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".article_product, "Product".title_product, "Product".brand, "Product".weight_product, "Product".id_category, "Product".id_subcategory_thirst_level, "Product".id_subcategory_second_level, "Product".explanation_product, "Product".brand_mark, "Product".model, "Product".photo_product, "Product".quantity_product, "Product".price_product, "Product".price_with_discount, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" ORDER BY "Product".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00126s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Review".id) AS count_1 
FROM "Review"
INFO:sqlalchemy.engine.Engine:[generated in 0.00023s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Review".text_review, "Review".estimation_review, "Review".id_user, "Review".id_product, "Review".id 
FROM "Review" ORDER BY "Review".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00020s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Order".id) AS count_1 
FROM "Order"
INFO:sqlalchemy.engine.Engine:[generated in 0.00056s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Order".date_buy, "Order".id_user, "Order".id_product, "Order".id 
FROM "Order" ORDER BY "Order".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00040s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Category".id) AS count_1 
FROM "Category"
INFO:sqlalchemy.engine.Engine:[generated in 0.00012s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category" ORDER BY "Category".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00021s] (10, 0)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".id_category AS "Subcategory_id_category", "Subcategory".name AS "Subcategory_name", "Subcategory".level AS "Subcategory_level", "Subcategory".id_sub_category AS "Subcategory_id_sub_category", "Subcategory".id AS "Subcategory_id" 
FROM "Subcategory" 
WHERE "Subcategory".id_category IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00034s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Product".id_category AS "Product_id_category", "Product".article_product AS "Product_article_product", "Product".title_product AS "Product_title_product", "Product".brand AS "Product_brand", "Product".weight_product AS "Product_weight_product", "Product".id_subcategory_thirst_level AS "Product_id_subcategory_thirst_level", "Product".id_subcategory_second_level AS "Product_id_subcategory_second_level", "Product".explanation_product AS "Product_explanation_product", "Product".brand_mark AS "Product_brand_mark", "Product".model AS "Product_model", "Product".photo_product AS "Product_photo_product", "Product".quantity_product AS "Product_quantity_product", "Product".price_product AS "Product_price_product", "Product".price_with_discount AS "Product_price_with_discount", "Product".date_create_product AS "Product_date_create_product", "Product".date_update_information AS "Product_date_update_information", "Product".product_discount AS "Product_product_discount", "Product".id AS "Product_id" 
FROM "Product" 
WHERE "Product".id_category IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00024s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Review".id) AS count_1 
FROM "Review"
INFO:sqlalchemy.engine.Engine:[cached since 2.768s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Review".text_review, "Review".estimation_review, "Review".id_user, "Review".id_product, "Review".id 
FROM "Review" ORDER BY "Review".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 2.766s ago] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Product".id) AS count_1 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[cached since 6.382s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".article_product, "Product".title_product, "Product".brand, "Product".weight_product, "Product".id_category, "Product".id_subcategory_thirst_level, "Product".id_subcategory_second_level, "Product".explanation_product, "Product".brand_mark, "Product".model, "Product".photo_product, "Product".quantity_product, "Product".price_product, "Product".price_with_discount, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" ORDER BY "Product".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 6.362s ago] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category"
INFO:sqlalchemy.engine.Engine:[cached since 13.42s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory"
INFO:sqlalchemy.engine.Engine:[cached since 13.41s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory"
INFO:sqlalchemy.engine.Engine:[cached since 13.42s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - проверка прав пользователя (на администратора), email=darkfos@gmail.com
INFO:src.api.authentication.hash_service.hashing:Хеширование пароля
INFO:src.database.repository.admin_repository:AdminRepository Запрос на получение данных по почте и паролю email=darkfos@gmail.com; password=$2b$12$8ZFBD6fLmE0nigOnyY/PJe40n0EiXGSrQMYOnCBLF4cbjxm7ZbpLS
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Admin".email_admin, "Admin".password_user, "Admin".date_create, "Admin".date_update, "Admin".id 
FROM "Admin" 
WHERE "Admin".email_admin = $1::VARCHAR
INFO:sqlalchemy.engine.Engine:[generated in 0.00032s] ('darkfos@gmail.com',)
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Product".id) AS count_1 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[cached since 121s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".article_product, "Product".title_product, "Product".brand, "Product".weight_product, "Product".id_category, "Product".id_subcategory_thirst_level, "Product".id_subcategory_second_level, "Product".explanation_product, "Product".brand_mark, "Product".model, "Product".photo_product, "Product".quantity_product, "Product".price_product, "Product".price_with_discount, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" ORDER BY "Product".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 121s ago] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category"
INFO:sqlalchemy.engine.Engine:[cached since 130.7s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory"
INFO:sqlalchemy.engine.Engine:[cached since 130.7s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory"
INFO:sqlalchemy.engine.Engine:[cached since 130.7s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Product".id) AS count_1 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[cached since 144s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".article_product, "Product".title_product, "Product".brand, "Product".weight_product, "Product".id_category, "Product".id_subcategory_thirst_level, "Product".id_subcategory_second_level, "Product".explanation_product, "Product".brand_mark, "Product".model, "Product".photo_product, "Product".quantity_product, "Product".price_product, "Product".price_with_discount, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" ORDER BY "Product".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 144s ago] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
ERROR:asyncio:Fatal error on SSL protocol
protocol: <uvloop.loop.SSLProtocol object at 0x75685d20c720>
transport: <TCPTransport closed=True reading=False 0x3bba6c0>
Traceback (most recent call last):
  File "uvloop/sslproto.pyx", line 669, in uvloop.loop.SSLProtocol._write_appdata
  File "uvloop/sslproto.pyx", line 699, in uvloop.loop.SSLProtocol._process_outgoing
  File "uvloop/handles/stream.pyx", line 674, in uvloop.loop.UVStream.write
  File "uvloop/handles/handle.pyx", line 159, in uvloop.loop.UVHandle._ensure_alive
RuntimeError: unable to perform operation on <TCPTransport closed=True reading=False 0x3bba6c0>; the handler is closed
ERROR:sqlalchemy.pool.impl.AsyncAdaptedQueuePool:The garbage collector is trying to clean up non-checked-in connection <AdaptedConnection <asyncpg.connection.Connection object at 0x75685ce5e210>>, which will be terminated.  Please ensure that SQLAlchemy pooled connections are returned to the pool explicitly, either by calling ``close()`` or by using appropriate context managers to manage their lifecycle.
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Product".id) AS count_1 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[generated in 0.00061s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".article_product, "Product".title_product, "Product".brand, "Product".weight_product, "Product".id_category, "Product".id_subcategory_thirst_level, "Product".id_subcategory_second_level, "Product".explanation_product, "Product".brand_mark, "Product".model, "Product".photo_product, "Product".quantity_product, "Product".price_product, "Product".price_with_discount, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" ORDER BY "Product".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00046s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category"
INFO:sqlalchemy.engine.Engine:[generated in 0.00021s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory"
INFO:sqlalchemy.engine.Engine:[generated in 0.00028s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory"
INFO:sqlalchemy.engine.Engine:[cached since 0.004469s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Product".id) AS count_1 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[generated in 0.00033s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".article_product, "Product".title_product, "Product".brand, "Product".weight_product, "Product".id_category, "Product".id_subcategory_thirst_level, "Product".id_subcategory_second_level, "Product".explanation_product, "Product".brand_mark, "Product".model, "Product".photo_product, "Product".quantity_product, "Product".price_product, "Product".price_with_discount, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" ORDER BY "Product".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00073s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category"
INFO:sqlalchemy.engine.Engine:[generated in 0.00016s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory"
INFO:sqlalchemy.engine.Engine:[generated in 0.00014s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory"
INFO:sqlalchemy.engine.Engine:[cached since 0.00532s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category"
INFO:sqlalchemy.engine.Engine:[generated in 0.00033s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory"
INFO:sqlalchemy.engine.Engine:[generated in 0.00019s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory"
INFO:sqlalchemy.engine.Engine:[cached since 0.004147s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:root:Start Project
INFO:root:Start Project
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category"
INFO:sqlalchemy.engine.Engine:[generated in 0.00032s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory"
INFO:sqlalchemy.engine.Engine:[generated in 0.00046s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory"
INFO:sqlalchemy.engine.Engine:[cached since 0.007188s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category"
INFO:sqlalchemy.engine.Engine:[generated in 0.00066s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory"
INFO:sqlalchemy.engine.Engine:[generated in 0.00047s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory"
INFO:sqlalchemy.engine.Engine:[cached since 0.005208s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category"
INFO:sqlalchemy.engine.Engine:[cached since 7.112s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory"
INFO:sqlalchemy.engine.Engine:[cached since 7.111s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory"
INFO:sqlalchemy.engine.Engine:[cached since 7.115s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.hash_service.hashing:Хеширование изображения
INFO:root:Image Saver (Admin Panel) сохранение фотографии в директории
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:INSERT INTO "Product" (article_product, title_product, brand, weight_product, id_category, id_subcategory_thirst_level, id_subcategory_second_level, explanation_product, brand_mark, model, photo_product, quantity_product, price_product, price_with_discount, date_create_product, date_update_information, product_discount) VALUES ($1::VARCHAR, $2::VARCHAR, $3::VARCHAR, $4::FLOAT, $5::INTEGER, $6::INTEGER, $7::INTEGER, $8::VARCHAR, $9::VARCHAR, $10::VARCHAR, $11::VARCHAR, $12::INTEGER, $13::FLOAT, $14::FLOAT, $15::DATE, $16::DATE, $17::INTEGER) RETURNING "Product".id
INFO:sqlalchemy.engine.Engine:[generated in 0.00032s] ('lkfkdskfksd', 'Title1', 'brand', 0.0, None, None, None, 'dddd', 'Marka', 'Da', '$2EHuSLOAdoQ__Волчий Дождь.jpeg', 999, 0, Decimal('5'), datetime.date(2024, 9, 26), datetime.date(2024, 9, 26), 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
ERROR:sqladmin.application:(sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.NotNullViolationError'>: null value in column "id_category" of relation "Product" violates not-null constraint
DETAIL:  Failing row contains (lkfkdskfksd, Title1, brand, 0, null, null, null, dddd, Marka, Da, $2EHuSLOAdoQ__Волчий Дождь.jpeg, 999, 0, 5, 2024-09-26, 2024-09-26, 0, 2).
[SQL: INSERT INTO "Product" (article_product, title_product, brand, weight_product, id_category, id_subcategory_thirst_level, id_subcategory_second_level, explanation_product, brand_mark, model, photo_product, quantity_product, price_product, price_with_discount, date_create_product, date_update_information, product_discount) VALUES ($1::VARCHAR, $2::VARCHAR, $3::VARCHAR, $4::FLOAT, $5::INTEGER, $6::INTEGER, $7::INTEGER, $8::VARCHAR, $9::VARCHAR, $10::VARCHAR, $11::VARCHAR, $12::INTEGER, $13::FLOAT, $14::FLOAT, $15::DATE, $16::DATE, $17::INTEGER) RETURNING "Product".id]
[parameters: ('lkfkdskfksd', 'Title1', 'brand', 0.0, None, None, None, 'dddd', 'Marka', 'Da', '$2EHuSLOAdoQ__Волчий Дождь.jpeg', 999, 0, Decimal('5'), datetime.date(2024, 9, 26), datetime.date(2024, 9, 26), 0)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
Traceback (most recent call last):
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 538, in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/asyncpg/prepared_stmt.py", line 176, in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/asyncpg/prepared_stmt.py", line 241, in __bind_execute
    data, status, _ = await self.__do_execute(
                      ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/asyncpg/prepared_stmt.py", line 230, in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "asyncpg/protocol/protocol.pyx", line 207, in bind_execute
asyncpg.exceptions.NotNullViolationError: null value in column "id_category" of relation "Product" violates not-null constraint
DETAIL:  Failing row contains (lkfkdskfksd, Title1, brand, 0, null, null, null, dddd, Marka, Da, $2EHuSLOAdoQ__Волчий Дождь.jpeg, 999, 0, 5, 2024-09-26, 2024-09-26, 0, 2).

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/engine/base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/engine/default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 572, in execute
    self._adapt_connection.await_(
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 550, in _prepare_and_execute
    self._handle_exception(error)
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 501, in _handle_exception
    self._adapt_connection._handle_exception(error)
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 784, in _handle_exception
    raise translated_error from error
sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_dbapi.IntegrityError: <class 'asyncpg.exceptions.NotNullViolationError'>: null value in column "id_category" of relation "Product" violates not-null constraint
DETAIL:  Failing row contains (lkfkdskfksd, Title1, brand, 0, null, null, null, dddd, Marka, Da, $2EHuSLOAdoQ__Волчий Дождь.jpeg, 999, 0, 5, 2024-09-26, 2024-09-26, 0, 2).

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqladmin/application.py", line 535, in create
    obj = await model_view.insert_model(request, form_data_dict)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqladmin/models.py", line 1003, in insert_model
    return await Query(self).insert(data, request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqladmin/_queries.py", line 226, in insert
    return await self._insert_async(data, request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqladmin/_queries.py", line 214, in _insert_async
    await session.commit()
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py", line 1009, in commit
    await greenlet_spawn(self.sync_session.commit)
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 203, in greenlet_spawn
    result = context.switch(value)
             ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 2028, in commit
    trans.commit(_to_root=True)
  File "<string>", line 2, in commit
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/orm/state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1313, in commit
    self._prepare_impl()
  File "<string>", line 2, in _prepare_impl
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/orm/state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1288, in _prepare_impl
    self.session.flush()
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 4352, in flush
    self._flush(objects)
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 4487, in _flush
    with util.safe_reraise():
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 4448, in _flush
    flush_context.execute()
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/orm/unitofwork.py", line 466, in execute
    rec.execute(self)
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/orm/unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/orm/persistence.py", line 93, in save_obj
    _emit_insert_statements(
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/orm/persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
             ^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/engine/base.py", line 1418, in execute
    return meth(
           ^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/sql/elements.py", line 515, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/engine/base.py", line 1640, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/engine/base.py", line 1846, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/engine/base.py", line 1986, in _exec_single_context
    self._handle_dbapi_exception(
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/engine/base.py", line 2355, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/engine/base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/engine/default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 572, in execute
    self._adapt_connection.await_(
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 550, in _prepare_and_execute
    self._handle_exception(error)
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 501, in _handle_exception
    self._adapt_connection._handle_exception(error)
  File "/home/rias/.cache/pypoetry/virtualenvs/scooter24-e5Akrdmr-py3.12/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 784, in _handle_exception
    raise translated_error from error
sqlalchemy.exc.IntegrityError: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.NotNullViolationError'>: null value in column "id_category" of relation "Product" violates not-null constraint
DETAIL:  Failing row contains (lkfkdskfksd, Title1, brand, 0, null, null, null, dddd, Marka, Da, $2EHuSLOAdoQ__Волчий Дождь.jpeg, 999, 0, 5, 2024-09-26, 2024-09-26, 0, 2).
[SQL: INSERT INTO "Product" (article_product, title_product, brand, weight_product, id_category, id_subcategory_thirst_level, id_subcategory_second_level, explanation_product, brand_mark, model, photo_product, quantity_product, price_product, price_with_discount, date_create_product, date_update_information, product_discount) VALUES ($1::VARCHAR, $2::VARCHAR, $3::VARCHAR, $4::FLOAT, $5::INTEGER, $6::INTEGER, $7::INTEGER, $8::VARCHAR, $9::VARCHAR, $10::VARCHAR, $11::VARCHAR, $12::INTEGER, $13::FLOAT, $14::FLOAT, $15::DATE, $16::DATE, $17::INTEGER) RETURNING "Product".id]
[parameters: ('lkfkdskfksd', 'Title1', 'brand', 0.0, None, None, None, 'dddd', 'Marka', 'Da', '$2EHuSLOAdoQ__Волчий Дождь.jpeg', 999, 0, Decimal('5'), datetime.date(2024, 9, 26), datetime.date(2024, 9, 26), 0)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Category".id) AS count_1 
FROM "Category"
INFO:sqlalchemy.engine.Engine:[generated in 0.00017s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category" ORDER BY "Category".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00037s] (10, 0)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".id_category AS "Subcategory_id_category", "Subcategory".name AS "Subcategory_name", "Subcategory".level AS "Subcategory_level", "Subcategory".id_sub_category AS "Subcategory_id_sub_category", "Subcategory".id AS "Subcategory_id" 
FROM "Subcategory" 
WHERE "Subcategory".id_category IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00060s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Product".id_category AS "Product_id_category", "Product".article_product AS "Product_article_product", "Product".title_product AS "Product_title_product", "Product".brand AS "Product_brand", "Product".weight_product AS "Product_weight_product", "Product".id_subcategory_thirst_level AS "Product_id_subcategory_thirst_level", "Product".id_subcategory_second_level AS "Product_id_subcategory_second_level", "Product".explanation_product AS "Product_explanation_product", "Product".brand_mark AS "Product_brand_mark", "Product".model AS "Product_model", "Product".photo_product AS "Product_photo_product", "Product".quantity_product AS "Product_quantity_product", "Product".price_product AS "Product_price_product", "Product".price_with_discount AS "Product_price_with_discount", "Product".date_create_product AS "Product_date_create_product", "Product".date_update_information AS "Product_date_update_information", "Product".product_discount AS "Product_product_discount", "Product".id AS "Product_id" 
FROM "Product" 
WHERE "Product".id_category IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00056s] (1,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Product".id) AS count_1 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[generated in 0.00051s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".article_product, "Product".title_product, "Product".brand, "Product".weight_product, "Product".id_category, "Product".id_subcategory_thirst_level, "Product".id_subcategory_second_level, "Product".explanation_product, "Product".brand_mark, "Product".model, "Product".photo_product, "Product".quantity_product, "Product".price_product, "Product".price_with_discount, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" ORDER BY "Product".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00043s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category"
INFO:sqlalchemy.engine.Engine:[cached since 87.19s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory"
INFO:sqlalchemy.engine.Engine:[cached since 87.19s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory"
INFO:sqlalchemy.engine.Engine:[cached since 87.19s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Historybuy".id) AS count_1 
FROM "Historybuy"
INFO:sqlalchemy.engine.Engine:[generated in 0.00031s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Historybuy".id_user, "Historybuy".id_product, "Historybuy".id 
FROM "Historybuy" ORDER BY "Historybuy".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00045s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Product".id) AS count_1 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[generated in 0.00022s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".article_product, "Product".title_product, "Product".brand, "Product".weight_product, "Product".id_category, "Product".id_subcategory_thirst_level, "Product".id_subcategory_second_level, "Product".explanation_product, "Product".brand_mark, "Product".model, "Product".photo_product, "Product".quantity_product, "Product".price_product, "Product".price_with_discount, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" ORDER BY "Product".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00041s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category"
INFO:sqlalchemy.engine.Engine:[generated in 0.00020s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory"
INFO:sqlalchemy.engine.Engine:[generated in 0.00036s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory"
INFO:sqlalchemy.engine.Engine:[cached since 0.005642s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category"
INFO:sqlalchemy.engine.Engine:[generated in 0.00029s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory"
INFO:sqlalchemy.engine.Engine:[generated in 0.00028s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory"
INFO:sqlalchemy.engine.Engine:[cached since 0.004689s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Subcategory".id) AS count_1 
FROM "Subcategory"
INFO:sqlalchemy.engine.Engine:[generated in 0.00041s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory" ORDER BY "Subcategory".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00061s] (10, 0)
INFO:sqlalchemy.engine.Engine:SELECT "Product".id_subcategory_thirst_level AS "Product_id_subcategory_thirst_level", "Product".article_product AS "Product_article_product", "Product".title_product AS "Product_title_product", "Product".brand AS "Product_brand", "Product".weight_product AS "Product_weight_product", "Product".id_category AS "Product_id_category", "Product".id_subcategory_second_level AS "Product_id_subcategory_second_level", "Product".explanation_product AS "Product_explanation_product", "Product".brand_mark AS "Product_brand_mark", "Product".model AS "Product_model", "Product".photo_product AS "Product_photo_product", "Product".quantity_product AS "Product_quantity_product", "Product".price_product AS "Product_price_product", "Product".price_with_discount AS "Product_price_with_discount", "Product".date_create_product AS "Product_date_create_product", "Product".date_update_information AS "Product_date_update_information", "Product".product_discount AS "Product_product_discount", "Product".id AS "Product_id" 
FROM "Product" 
WHERE "Product".id_subcategory_thirst_level IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00043s] (2,)
INFO:sqlalchemy.engine.Engine:SELECT "Category".id AS "Category_id", "Category".name_category AS "Category_name_category", "Category".icon_category AS "Category_icon_category" 
FROM "Category" 
WHERE "Category".id IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00045s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Product".id_subcategory_second_level AS "Product_id_subcategory_second_level", "Product".article_product AS "Product_article_product", "Product".title_product AS "Product_title_product", "Product".brand AS "Product_brand", "Product".weight_product AS "Product_weight_product", "Product".id_category AS "Product_id_category", "Product".id_subcategory_thirst_level AS "Product_id_subcategory_thirst_level", "Product".explanation_product AS "Product_explanation_product", "Product".brand_mark AS "Product_brand_mark", "Product".model AS "Product_model", "Product".photo_product AS "Product_photo_product", "Product".quantity_product AS "Product_quantity_product", "Product".price_product AS "Product_price_product", "Product".price_with_discount AS "Product_price_with_discount", "Product".date_create_product AS "Product_date_create_product", "Product".date_update_information AS "Product_date_update_information", "Product".product_discount AS "Product_product_discount", "Product".id AS "Product_id" 
FROM "Product" 
WHERE "Product".id_subcategory_second_level IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00056s] (2,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category"
INFO:sqlalchemy.engine.Engine:[generated in 0.00017s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".article_product, "Product".title_product, "Product".brand, "Product".weight_product, "Product".id_category, "Product".id_subcategory_thirst_level, "Product".id_subcategory_second_level, "Product".explanation_product, "Product".brand_mark, "Product".model, "Product".photo_product, "Product".quantity_product, "Product".price_product, "Product".price_with_discount, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[generated in 0.00017s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".article_product, "Product".title_product, "Product".brand, "Product".weight_product, "Product".id_category, "Product".id_subcategory_thirst_level, "Product".id_subcategory_second_level, "Product".explanation_product, "Product".brand_mark, "Product".model, "Product".photo_product, "Product".quantity_product, "Product".price_product, "Product".price_with_discount, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[cached since 0.007403s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Subcategory".id) AS count_1 
FROM "Subcategory"
INFO:sqlalchemy.engine.Engine:[cached since 10.99s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory" ORDER BY "Subcategory".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 10.98s ago] (10, 0)
INFO:sqlalchemy.engine.Engine:SELECT "Product".id_subcategory_thirst_level AS "Product_id_subcategory_thirst_level", "Product".article_product AS "Product_article_product", "Product".title_product AS "Product_title_product", "Product".brand AS "Product_brand", "Product".weight_product AS "Product_weight_product", "Product".id_category AS "Product_id_category", "Product".id_subcategory_second_level AS "Product_id_subcategory_second_level", "Product".explanation_product AS "Product_explanation_product", "Product".brand_mark AS "Product_brand_mark", "Product".model AS "Product_model", "Product".photo_product AS "Product_photo_product", "Product".quantity_product AS "Product_quantity_product", "Product".price_product AS "Product_price_product", "Product".price_with_discount AS "Product_price_with_discount", "Product".date_create_product AS "Product_date_create_product", "Product".date_update_information AS "Product_date_update_information", "Product".product_discount AS "Product_product_discount", "Product".id AS "Product_id" 
FROM "Product" 
WHERE "Product".id_subcategory_thirst_level IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 10.97s ago] (2,)
INFO:sqlalchemy.engine.Engine:SELECT "Category".id AS "Category_id", "Category".name_category AS "Category_name_category", "Category".icon_category AS "Category_icon_category" 
FROM "Category" 
WHERE "Category".id IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 10.97s ago] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Product".id_subcategory_second_level AS "Product_id_subcategory_second_level", "Product".article_product AS "Product_article_product", "Product".title_product AS "Product_title_product", "Product".brand AS "Product_brand", "Product".weight_product AS "Product_weight_product", "Product".id_category AS "Product_id_category", "Product".id_subcategory_thirst_level AS "Product_id_subcategory_thirst_level", "Product".explanation_product AS "Product_explanation_product", "Product".brand_mark AS "Product_brand_mark", "Product".model AS "Product_model", "Product".photo_product AS "Product_photo_product", "Product".quantity_product AS "Product_quantity_product", "Product".price_product AS "Product_price_product", "Product".price_with_discount AS "Product_price_with_discount", "Product".date_create_product AS "Product_date_create_product", "Product".date_update_information AS "Product_date_update_information", "Product".product_discount AS "Product_product_discount", "Product".id AS "Product_id" 
FROM "Product" 
WHERE "Product".id_subcategory_second_level IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 10.97s ago] (2,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Subcategory".id) AS count_1 
FROM "Subcategory"
INFO:sqlalchemy.engine.Engine:[generated in 0.00030s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory" ORDER BY "Subcategory".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00049s] (10, 0)
INFO:sqlalchemy.engine.Engine:SELECT "Product".id_subcategory_thirst_level AS "Product_id_subcategory_thirst_level", "Product".article_product AS "Product_article_product", "Product".title_product AS "Product_title_product", "Product".brand AS "Product_brand", "Product".weight_product AS "Product_weight_product", "Product".id_category AS "Product_id_category", "Product".id_subcategory_second_level AS "Product_id_subcategory_second_level", "Product".explanation_product AS "Product_explanation_product", "Product".brand_mark AS "Product_brand_mark", "Product".model AS "Product_model", "Product".photo_product AS "Product_photo_product", "Product".quantity_product AS "Product_quantity_product", "Product".price_product AS "Product_price_product", "Product".price_with_discount AS "Product_price_with_discount", "Product".date_create_product AS "Product_date_create_product", "Product".date_update_information AS "Product_date_update_information", "Product".product_discount AS "Product_product_discount", "Product".id AS "Product_id" 
FROM "Product" 
WHERE "Product".id_subcategory_thirst_level IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00091s] (2,)
INFO:sqlalchemy.engine.Engine:SELECT "Category".id AS "Category_id", "Category".name_category AS "Category_name_category", "Category".icon_category AS "Category_icon_category" 
FROM "Category" 
WHERE "Category".id IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00062s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Product".id_subcategory_second_level AS "Product_id_subcategory_second_level", "Product".article_product AS "Product_article_product", "Product".title_product AS "Product_title_product", "Product".brand AS "Product_brand", "Product".weight_product AS "Product_weight_product", "Product".id_category AS "Product_id_category", "Product".id_subcategory_thirst_level AS "Product_id_subcategory_thirst_level", "Product".explanation_product AS "Product_explanation_product", "Product".brand_mark AS "Product_brand_mark", "Product".model AS "Product_model", "Product".photo_product AS "Product_photo_product", "Product".quantity_product AS "Product_quantity_product", "Product".price_product AS "Product_price_product", "Product".price_with_discount AS "Product_price_with_discount", "Product".date_create_product AS "Product_date_create_product", "Product".date_update_information AS "Product_date_update_information", "Product".product_discount AS "Product_product_discount", "Product".id AS "Product_id" 
FROM "Product" 
WHERE "Product".id_subcategory_second_level IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00054s] (2,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Product".id) AS count_1 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[generated in 0.00012s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".article_product, "Product".title_product, "Product".brand, "Product".weight_product, "Product".id_category, "Product".id_subcategory_thirst_level, "Product".id_subcategory_second_level, "Product".explanation_product, "Product".brand_mark, "Product".model, "Product".photo_product, "Product".quantity_product, "Product".price_product, "Product".price_with_discount, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" ORDER BY "Product".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00025s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category" 
WHERE CAST("Category".id AS VARCHAR) ILIKE $1::VARCHAR ORDER BY "Category".id 
 LIMIT $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00025s] ('%1%', 10)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory" 
WHERE CAST("Subcategory".id AS VARCHAR) ILIKE $1::VARCHAR ORDER BY "Subcategory".id 
 LIMIT $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00021s] ('%1%', 10)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory" 
WHERE CAST("Subcategory".id AS VARCHAR) ILIKE $1::VARCHAR ORDER BY "Subcategory".id 
 LIMIT $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 1.29s ago] ('%2%', 10)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory" 
WHERE CAST("Subcategory".id AS VARCHAR) ILIKE $1::VARCHAR ORDER BY "Subcategory".id 
 LIMIT $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 12.18s ago] ('%3%', 10)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory" 
WHERE CAST("Subcategory".id AS VARCHAR) ILIKE $1::VARCHAR ORDER BY "Subcategory".id 
 LIMIT $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 13.11s ago] ('%1%', 10)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory" 
WHERE CAST("Subcategory".id AS VARCHAR) ILIKE $1::VARCHAR ORDER BY "Subcategory".id 
 LIMIT $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 14.53s ago] ('%12%', 10)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory" 
WHERE CAST("Subcategory".id AS VARCHAR) ILIKE $1::VARCHAR ORDER BY "Subcategory".id 
 LIMIT $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 15.24s ago] ('%12\\%', 10)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory" 
WHERE CAST("Subcategory".id AS VARCHAR) ILIKE $1::VARCHAR ORDER BY "Subcategory".id 
 LIMIT $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 15.5s ago] ('%12\\\\%', 10)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory" 
WHERE CAST("Subcategory".id AS VARCHAR) ILIKE $1::VARCHAR ORDER BY "Subcategory".id 
 LIMIT $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 15.78s ago] ('%12\\%', 10)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory" 
WHERE CAST("Subcategory".id AS VARCHAR) ILIKE $1::VARCHAR ORDER BY "Subcategory".id 
 LIMIT $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 15.95s ago] ('%12%', 10)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory" 
WHERE CAST("Subcategory".id AS VARCHAR) ILIKE $1::VARCHAR ORDER BY "Subcategory".id 
 LIMIT $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 16.13s ago] ('%1%', 10)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory" 
WHERE CAST("Subcategory".id AS VARCHAR) ILIKE $1::VARCHAR ORDER BY "Subcategory".id 
 LIMIT $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 16.5s ago] ('%2%', 10)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Subcategory".id) AS count_1 
FROM "Subcategory"
INFO:sqlalchemy.engine.Engine:[cached since 32.55s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory" ORDER BY "Subcategory".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 32.54s ago] (10, 0)
INFO:sqlalchemy.engine.Engine:SELECT "Product".id_subcategory_thirst_level AS "Product_id_subcategory_thirst_level", "Product".article_product AS "Product_article_product", "Product".title_product AS "Product_title_product", "Product".brand AS "Product_brand", "Product".weight_product AS "Product_weight_product", "Product".id_category AS "Product_id_category", "Product".id_subcategory_second_level AS "Product_id_subcategory_second_level", "Product".explanation_product AS "Product_explanation_product", "Product".brand_mark AS "Product_brand_mark", "Product".model AS "Product_model", "Product".photo_product AS "Product_photo_product", "Product".quantity_product AS "Product_quantity_product", "Product".price_product AS "Product_price_product", "Product".price_with_discount AS "Product_price_with_discount", "Product".date_create_product AS "Product_date_create_product", "Product".date_update_information AS "Product_date_update_information", "Product".product_discount AS "Product_product_discount", "Product".id AS "Product_id" 
FROM "Product" 
WHERE "Product".id_subcategory_thirst_level IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 32.54s ago] (2,)
INFO:sqlalchemy.engine.Engine:SELECT "Category".id AS "Category_id", "Category".name_category AS "Category_name_category", "Category".icon_category AS "Category_icon_category" 
FROM "Category" 
WHERE "Category".id IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 32.53s ago] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Product".id_subcategory_second_level AS "Product_id_subcategory_second_level", "Product".article_product AS "Product_article_product", "Product".title_product AS "Product_title_product", "Product".brand AS "Product_brand", "Product".weight_product AS "Product_weight_product", "Product".id_category AS "Product_id_category", "Product".id_subcategory_thirst_level AS "Product_id_subcategory_thirst_level", "Product".explanation_product AS "Product_explanation_product", "Product".brand_mark AS "Product_brand_mark", "Product".model AS "Product_model", "Product".photo_product AS "Product_photo_product", "Product".quantity_product AS "Product_quantity_product", "Product".price_product AS "Product_price_product", "Product".price_with_discount AS "Product_price_with_discount", "Product".date_create_product AS "Product_date_create_product", "Product".date_update_information AS "Product_date_update_information", "Product".product_discount AS "Product_product_discount", "Product".id AS "Product_id" 
FROM "Product" 
WHERE "Product".id_subcategory_second_level IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[cached since 32.52s ago] (2,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category"
INFO:sqlalchemy.engine.Engine:[generated in 0.00021s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".article_product, "Product".title_product, "Product".brand, "Product".weight_product, "Product".id_category, "Product".id_subcategory_thirst_level, "Product".id_subcategory_second_level, "Product".explanation_product, "Product".brand_mark, "Product".model, "Product".photo_product, "Product".quantity_product, "Product".price_product, "Product".price_with_discount, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[generated in 0.00022s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".article_product, "Product".title_product, "Product".brand, "Product".weight_product, "Product".id_category, "Product".id_subcategory_thirst_level, "Product".id_subcategory_second_level, "Product".explanation_product, "Product".brand_mark, "Product".model, "Product".photo_product, "Product".quantity_product, "Product".price_product, "Product".price_with_discount, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[cached since 0.003905s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:root:Start Project
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:select pg_catalog.version()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:select current_schema()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:show standard_conforming_strings
INFO:sqlalchemy.engine.Engine:[raw sql] ()
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category"
INFO:sqlalchemy.engine.Engine:[generated in 0.00033s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".article_product, "Product".title_product, "Product".brand, "Product".weight_product, "Product".id_category, "Product".id_subcategory_thirst_level, "Product".id_subcategory_second_level, "Product".explanation_product, "Product".brand_mark, "Product".model, "Product".photo_product, "Product".quantity_product, "Product".price_product, "Product".price_with_discount, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[generated in 0.00035s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".article_product, "Product".title_product, "Product".brand, "Product".weight_product, "Product".id_category, "Product".id_subcategory_thirst_level, "Product".id_subcategory_second_level, "Product".explanation_product, "Product".brand_mark, "Product".model, "Product".photo_product, "Product".quantity_product, "Product".price_product, "Product".price_with_discount, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[cached since 0.005952s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory" 
WHERE CAST("Subcategory".id AS VARCHAR) ILIKE $1::VARCHAR ORDER BY "Subcategory".id 
 LIMIT $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00031s] ('%1%', 10)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory" 
WHERE CAST("Subcategory".id AS VARCHAR) ILIKE $1::VARCHAR ORDER BY "Subcategory".id 
 LIMIT $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 1.651s ago] ('%2%', 10)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category"
INFO:sqlalchemy.engine.Engine:[cached since 25.43s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".article_product, "Product".title_product, "Product".brand, "Product".weight_product, "Product".id_category, "Product".id_subcategory_thirst_level, "Product".id_subcategory_second_level, "Product".explanation_product, "Product".brand_mark, "Product".model, "Product".photo_product, "Product".quantity_product, "Product".price_product, "Product".price_with_discount, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[cached since 25.42s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".article_product, "Product".title_product, "Product".brand, "Product".weight_product, "Product".id_category, "Product".id_subcategory_thirst_level, "Product".id_subcategory_second_level, "Product".explanation_product, "Product".brand_mark, "Product".model, "Product".photo_product, "Product".quantity_product, "Product".price_product, "Product".price_with_discount, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[cached since 25.42s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory" 
WHERE "Subcategory".id = $1::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00059s] (2,)
INFO:sqlalchemy.engine.Engine:INSERT INTO "Subcategory" (name, level, id_category, id_sub_category) VALUES ($1::VARCHAR, $2::INTEGER, $3::INTEGER, $4::INTEGER) RETURNING "Subcategory".id
INFO:sqlalchemy.engine.Engine:[generated in 0.00036s] ('Поршневая система', 2, None, None)
INFO:sqlalchemy.engine.Engine:UPDATE "Subcategory" SET id_sub_category=$1::INTEGER WHERE "Subcategory".id = $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00067s] (3, 2)
INFO:sqlalchemy.engine.Engine:COMMIT
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Subcategory".id) AS count_1 
FROM "Subcategory"
INFO:sqlalchemy.engine.Engine:[generated in 0.00028s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory" ORDER BY "Subcategory".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00039s] (10, 0)
INFO:sqlalchemy.engine.Engine:SELECT "Product".id_subcategory_second_level AS "Product_id_subcategory_second_level", "Product".article_product AS "Product_article_product", "Product".title_product AS "Product_title_product", "Product".brand AS "Product_brand", "Product".weight_product AS "Product_weight_product", "Product".id_category AS "Product_id_category", "Product".id_subcategory_thirst_level AS "Product_id_subcategory_thirst_level", "Product".explanation_product AS "Product_explanation_product", "Product".brand_mark AS "Product_brand_mark", "Product".model AS "Product_model", "Product".photo_product AS "Product_photo_product", "Product".quantity_product AS "Product_quantity_product", "Product".price_product AS "Product_price_product", "Product".price_with_discount AS "Product_price_with_discount", "Product".date_create_product AS "Product_date_create_product", "Product".date_update_information AS "Product_date_update_information", "Product".product_discount AS "Product_product_discount", "Product".id AS "Product_id" 
FROM "Product" 
WHERE "Product".id_subcategory_second_level IN ($1::INTEGER, $2::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00061s] (2, 3)
INFO:sqlalchemy.engine.Engine:SELECT "Category".id AS "Category_id", "Category".name_category AS "Category_name_category", "Category".icon_category AS "Category_icon_category" 
FROM "Category" 
WHERE "Category".id IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00074s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".id_sub_category AS "Subcategory_id_sub_category", "Subcategory".name AS "Subcategory_name", "Subcategory".level AS "Subcategory_level", "Subcategory".id_category AS "Subcategory_id_category", "Subcategory".id AS "Subcategory_id" 
FROM "Subcategory" 
WHERE "Subcategory".id_sub_category IN ($1::INTEGER, $2::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00058s] (2, 3)
INFO:sqlalchemy.engine.Engine:SELECT "Product".id_subcategory_thirst_level AS "Product_id_subcategory_thirst_level", "Product".article_product AS "Product_article_product", "Product".title_product AS "Product_title_product", "Product".brand AS "Product_brand", "Product".weight_product AS "Product_weight_product", "Product".id_category AS "Product_id_category", "Product".id_subcategory_second_level AS "Product_id_subcategory_second_level", "Product".explanation_product AS "Product_explanation_product", "Product".brand_mark AS "Product_brand_mark", "Product".model AS "Product_model", "Product".photo_product AS "Product_photo_product", "Product".quantity_product AS "Product_quantity_product", "Product".price_product AS "Product_price_product", "Product".price_with_discount AS "Product_price_with_discount", "Product".date_create_product AS "Product_date_create_product", "Product".date_update_information AS "Product_date_update_information", "Product".product_discount AS "Product_product_discount", "Product".id AS "Product_id" 
FROM "Product" 
WHERE "Product".id_subcategory_thirst_level IN ($1::INTEGER, $2::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00063s] (2, 3)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Product".id) AS count_1 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[generated in 0.00062s] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".article_product, "Product".title_product, "Product".brand, "Product".weight_product, "Product".id_category, "Product".id_subcategory_thirst_level, "Product".id_subcategory_second_level, "Product".explanation_product, "Product".brand_mark, "Product".model, "Product".photo_product, "Product".quantity_product, "Product".price_product, "Product".price_with_discount, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" ORDER BY "Product".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00035s] (10, 0)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Category".name_category, "Category".icon_category, "Category".id 
FROM "Category" 
WHERE CAST("Category".id AS VARCHAR) ILIKE $1::VARCHAR ORDER BY "Category".id 
 LIMIT $2::INTEGER
INFO:sqlalchemy.engine.Engine:[generated in 0.00046s] ('%1%', 10)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory" 
WHERE CAST("Subcategory".id AS VARCHAR) ILIKE $1::VARCHAR ORDER BY "Subcategory".id 
 LIMIT $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 85.84s ago] ('%2%', 10)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".name, "Subcategory".level, "Subcategory".id_category, "Subcategory".id_sub_category, "Subcategory".id 
FROM "Subcategory" 
WHERE CAST("Subcategory".id AS VARCHAR) ILIKE $1::VARCHAR ORDER BY "Subcategory".id 
 LIMIT $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 90.3s ago] ('%3%', 10)
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:src.api.authentication.hash_service.hashing:Хеширование изображения
INFO:root:Image Saver (Admin Panel) сохранение фотографии в директории
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:INSERT INTO "Product" (article_product, title_product, brand, weight_product, id_category, id_subcategory_thirst_level, id_subcategory_second_level, explanation_product, brand_mark, model, photo_product, quantity_product, price_product, price_with_discount, date_create_product, date_update_information, product_discount) VALUES ($1::VARCHAR, $2::VARCHAR, $3::VARCHAR, $4::FLOAT, $5::INTEGER, $6::INTEGER, $7::INTEGER, $8::VARCHAR, $9::VARCHAR, $10::VARCHAR, $11::VARCHAR, $12::INTEGER, $13::FLOAT, $14::FLOAT, $15::DATE, $16::DATE, $17::INTEGER) RETURNING "Product".id
INFO:sqlalchemy.engine.Engine:[generated in 0.00043s] ('ыфвфывфыв', 'Заголовок продукта', 'вфывфыв', Decimal('3'), 1, 2, 3, 'Пояснение', 'вфывфыв', 'вфывфыв', '$2XibCdjSouV__blood.jpg', 33, Decimal('33'), Decimal('33'), datetime.date(2024, 9, 26), datetime.date(2024, 9, 26), 0)
INFO:sqlalchemy.engine.Engine:COMMIT
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - обновление токена
INFO:src.api.authentication.secure.authentication_service:Сервис Аутентификации - декодирование токена
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT count("Product".id) AS count_1 
FROM "Product"
INFO:sqlalchemy.engine.Engine:[cached since 44.29s ago] ()
INFO:sqlalchemy.engine.Engine:ROLLBACK
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:SELECT "Product".article_product, "Product".title_product, "Product".brand, "Product".weight_product, "Product".id_category, "Product".id_subcategory_thirst_level, "Product".id_subcategory_second_level, "Product".explanation_product, "Product".brand_mark, "Product".model, "Product".photo_product, "Product".quantity_product, "Product".price_product, "Product".price_with_discount, "Product".date_create_product, "Product".date_update_information, "Product".product_discount, "Product".id 
FROM "Product" ORDER BY "Product".id ASC 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
INFO:sqlalchemy.engine.Engine:[cached since 44.29s ago] (10, 0)
INFO:sqlalchemy.engine.Engine:SELECT "Category".id AS "Category_id", "Category".name_category AS "Category_name_category", "Category".icon_category AS "Category_icon_category" 
FROM "Category" 
WHERE "Category".id IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00063s] (1,)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".id AS "Subcategory_id", "Subcategory".name AS "Subcategory_name", "Subcategory".level AS "Subcategory_level", "Subcategory".id_category AS "Subcategory_id_category", "Subcategory".id_sub_category AS "Subcategory_id_sub_category" 
FROM "Subcategory" 
WHERE "Subcategory".id IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00071s] (2,)
INFO:sqlalchemy.engine.Engine:SELECT "Subcategory".id AS "Subcategory_id", "Subcategory".name AS "Subcategory_name", "Subcategory".level AS "Subcategory_level", "Subcategory".id_category AS "Subcategory_id_category", "Subcategory".id_sub_category AS "Subcategory_id_sub_category" 
FROM "Subcategory" 
WHERE "Subcategory".id IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00043s] (3,)
INFO:sqlalchemy.engine.Engine:SELECT "Review".id_product AS "Review_id_product", "Review".text_review AS "Review_text_review", "Review".estimation_review AS "Review_estimation_review", "Review".id_user AS "Review_id_user", "Review".id AS "Review_id" 
FROM "Review" 
WHERE "Review".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00074s] (3,)
INFO:sqlalchemy.engine.Engine:SELECT "Order".id_product AS "Order_id_product", "Order".date_buy AS "Order_date_buy", "Order".id_user AS "Order_id_user", "Order".id AS "Order_id" 
FROM "Order" 
WHERE "Order".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00065s] (3,)
INFO:sqlalchemy.engine.Engine:SELECT "Favourite".id_product AS "Favourite_id_product", "Favourite".id_user AS "Favourite_id_user", "Favourite".id AS "Favourite_id" 
FROM "Favourite" 
WHERE "Favourite".id_product IN ($1::INTEGER)
INFO:sqlalchemy.engine.Engine:[generated in 0.00059s] (3,)
INFO:sqlalchemy.engine.Engine:ROLLBACK
