"""update product table

Revision ID: 29f4c195b624
Revises: 1cbf0a317828
Create Date: 2025-01-18 09:56:54.506400

"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "29f4c195b624"
down_revision = "1cbf0a317828"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "Brand",
        sa.Column("name_brand", sa.String(length=100), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name_brand"),
    )
    op.create_table(
        "Category",
        sa.Column("name_category", sa.String(length=150), nullable=False),
        sa.Column("icon_category", sa.Text(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_Category_name_category"),
        "Category",
        ["name_category"],
        unique=True,
    )
    op.create_table(
        "Mark",
        sa.Column("name_mark", sa.String(length=100), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name_mark"),
    )
    op.create_table(
        "Typeworker",
        sa.Column("name_type", sa.String(length=300), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_Typeworker_name_type"),
        "Typeworker",
        ["name_type"],
        unique=True,
    )
    op.create_table(
        "Usertype",
        sa.Column("name_type", sa.String(length=100), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "Model",
        sa.Column("name_model", sa.String(length=100), nullable=False),
        sa.Column("id_mark", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["id_mark"], ["Mark.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name_model"),
    )
    op.create_table(
        "Subcategory",
        sa.Column("name", sa.String(length=225), nullable=False),
        sa.Column("id_category", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id_category"], ["Category.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "User",
        sa.Column("id_type_user", sa.Integer(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("email_user", sa.Text(), nullable=False),
        sa.Column("password_user", sa.LargeBinary(), nullable=False),
        sa.Column("secret_update_key", sa.String(length=80), nullable=True),
        sa.Column("secret_create_key", sa.String(length=80), nullable=True),
        sa.Column("name_user", sa.String(length=100), nullable=True),
        sa.Column("surname_user", sa.String(length=150), nullable=True),
        sa.Column("main_name_user", sa.String(length=250), nullable=False),
        sa.Column("date_registration", sa.Date(), nullable=False),
        sa.Column("date_update", sa.Date(), nullable=False),
        sa.Column("name_user_address", sa.String(length=200), nullable=True),
        sa.Column("surname_user_address", sa.String(length=200), nullable=True),
        sa.Column("name_company_address", sa.String(length=200), nullable=True),
        sa.Column("country_address", sa.String(length=300), nullable=True),
        sa.Column("address_street", sa.String(length=450), nullable=True),
        sa.Column("address_rl_et_home", sa.String(length=250), nullable=True),
        sa.Column("address_locality", sa.String(length=300), nullable=True),
        sa.Column("address_area", sa.String(length=350), nullable=True),
        sa.Column("address_index", sa.Integer(), nullable=True),
        sa.Column("address_phone_number", sa.String(length=40), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id_type_user"],
            ["Usertype.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_User_country_address"),
        "User",
        ["country_address"],
        unique=False,
    )
    op.create_index(
        op.f("ix_User_email_user"), "User", ["email_user"], unique=True
    )
    op.create_index(
        op.f("ix_User_name_company_address"),
        "User",
        ["name_company_address"],
        unique=False,
    )
    op.create_table(
        "Vacancies",
        sa.Column("salary_employee", sa.Integer(), nullable=False),
        sa.Column("description_vacancies", sa.Text(), nullable=False),
        sa.Column("id_type_worker", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id_type_worker"],
            ["Typeworker.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "Product",
        sa.Column("article_product", sa.String(length=300), nullable=False),
        sa.Column("title_product", sa.String(length=500), nullable=False),
        sa.Column("brand", sa.Integer(), nullable=True),
        sa.Column("brand_mark", sa.Integer(), nullable=True),
        sa.Column("weight_product", sa.Double(), nullable=True),
        sa.Column("id_sub_category", sa.Integer(), nullable=True),
        sa.Column("explanation_product", sa.Text(), nullable=True),
        sa.Column("quantity_product", sa.Integer(), nullable=True),
        sa.Column("label_product", sa.String(length=80), nullable=True),
        sa.Column("price_product", sa.Double(), nullable=False),
        sa.Column("price_with_discount", sa.Double(), nullable=True),
        sa.Column("date_create_product", sa.Date(), nullable=True),
        sa.Column("date_update_information", sa.Date(), nullable=True),
        sa.Column("product_discount", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["brand"], ["Brand.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(
            ["brand_mark"], ["Mark.id"], ondelete="SET NULL"
        ),
        sa.ForeignKeyConstraint(
            ["id_sub_category"], ["Subcategory.id"], ondelete="SET NULL"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_Product_title_product"),
        "Product",
        ["title_product"],
        unique=True,
    )
    op.create_table(
        "Favourite",
        sa.Column("id_user", sa.Integer(), nullable=False),
        sa.Column("id_product", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id_product"],
            ["Product.id"],
        ),
        sa.ForeignKeyConstraint(
            ["id_user"],
            ["User.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "Order",
        sa.Column("date_buy", sa.Date(), nullable=False),
        sa.Column("id_user", sa.Integer(), nullable=False),
        sa.Column("id_product", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id_product"],
            ["Product.id"],
        ),
        sa.ForeignKeyConstraint(
            ["id_user"],
            ["User.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "Productmodels",
        sa.Column("id_product", sa.Integer(), nullable=False),
        sa.Column("id_model", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["id_model"], ["Model.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["id_product"], ["Product.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "Productphotos",
        sa.Column("photo_url", sa.Text(), nullable=False),
        sa.Column("id_product", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id_product"], ["Product.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "Review",
        sa.Column("text_review", sa.Text(), nullable=False),
        sa.Column("estimation_review", sa.Integer(), nullable=False),
        sa.Column("id_user", sa.Integer(), nullable=False),
        sa.Column("id_product", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id_product"],
            ["Product.id"],
        ),
        sa.ForeignKeyConstraint(
            ["id_user"],
            ["User.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("Review")
    op.drop_table("Productphotos")
    op.drop_table("Productmodels")
    op.drop_table("Order")
    op.drop_table("Favourite")
    op.drop_index(op.f("ix_Product_title_product"), table_name="Product")
    op.drop_table("Product")
    op.drop_table("Vacancies")
    op.drop_index(op.f("ix_User_name_company_address"), table_name="User")
    op.drop_index(op.f("ix_User_email_user"), table_name="User")
    op.drop_index(op.f("ix_User_country_address"), table_name="User")
    op.drop_table("User")
    op.drop_table("Subcategory")
    op.drop_table("Model")
    op.drop_table("Usertype")
    op.drop_index(op.f("ix_Typeworker_name_type"), table_name="Typeworker")
    op.drop_table("Typeworker")
    op.drop_table("Mark")
    op.drop_index(op.f("ix_Category_name_category"), table_name="Category")
    op.drop_table("Category")
    op.drop_table("Brand")
    # ### end Alembic commands ###
